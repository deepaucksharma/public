{
  "swagger" : "2.0",
  "info" : {
    "version" : "1.12.0",
    "title" : "OpenMRS API Docs",
    "description" : "OpenMRS RESTful API specification",
    "contact" : {
      "name" : "OpenMRS",
      "url" : "http://openmrs.org"
    },
    "license" : {
      "name" : "MPL-2.0 w/ HD",
      "url" : "http://openmrs.org/license"
    },
    "x-versions" : {
      "platform" : "1.12.0  Build 8f283e",
      "modules" : [ {
        "name" : "bacteriology",
        "version" : "1.0-SNAPSHOT"
      }, {
        "name" : "metadatasharing",
        "version" : "1.2"
      }, {
        "name" : "reporting",
        "version" : "0.9.8.1"
      }, {
        "name" : "openmrs-atomfeed",
        "version" : "2.5.4"
      }, {
        "name" : "idgen",
        "version" : "4.3"
      }, {
        "name" : "emrapi",
        "version" : "1.16"
      }, {
        "name" : "rulesengine",
        "version" : "0.86-SNAPSHOT"
      }, {
        "name" : "idgen-webservices",
        "version" : "1.1-SNAPSHOT"
      }, {
        "name" : "appframework",
        "version" : "2.3"
      }, {
        "name" : "metadatamapping",
        "version" : "1.0.2"
      }, {
        "name" : "bahmnicore",
        "version" : "0.85-SNAPSHOT"
      }, {
        "name" : "uiframework",
        "version" : "3.4"
      }, {
        "name" : "bedmanagement",
        "version" : "5.5-SNAPSHOT"
      }, {
        "name" : "dataintegrity",
        "version" : "4.1-SNAPSHOT"
      }, {
        "name" : "htmlwidgets",
        "version" : "1.6.4"
      }, {
        "name" : "serialization.xstream",
        "version" : "0.2.10"
      }, {
        "name" : "addresshierarchy",
        "version" : "2.8"
      }, {
        "name" : "reference-data",
        "version" : "0.84-SNAPSHOT"
      }, {
        "name" : "event",
        "version" : "2.2.1"
      }, {
        "name" : "bahmniendtb",
        "version" : "1.5-SNAPSHOT"
      }, {
        "name" : "providermanagement",
        "version" : "2.3"
      }, {
        "name" : "calculation",
        "version" : "1.1"
      }, {
        "name" : "episodes",
        "version" : "0.1-SNAPSHOT"
      }, {
        "name" : "uicommons",
        "version" : "1.7"
      }, {
        "name" : "webservices.rest",
        "version" : "2.14.dc38aa"
      }, {
        "name" : "uilibrary",
        "version" : "2.0.4"
      } ]
    }
  },
  "host" : "192.168.33.10/openmrs/ws/rest",
  "basePath" : "/v1",
  "tags" : [ {
    "name" : "admissionLocation"
  }, {
    "name" : "allergy"
  }, {
    "name" : "bahmniorderset"
  }, {
    "name" : "bahmniprogramenrollment"
  }, {
    "name" : "bed"
  }, {
    "name" : "bedPatientAssignment"
  }, {
    "name" : "beds"
  }, {
    "name" : "caresetting"
  }, {
    "name" : "cohort"
  }, {
    "name" : "concept"
  }, {
    "name" : "conceptclass"
  }, {
    "name" : "conceptdatatype"
  }, {
    "name" : "conceptmaptype"
  }, {
    "name" : "conceptreferenceterm"
  }, {
    "name" : "conceptreferencetermmap"
  }, {
    "name" : "conceptsource"
  }, {
    "name" : "conceptstopword"
  }, {
    "name" : "customdatatype"
  }, {
    "name" : "drug"
  }, {
    "name" : "encounter"
  }, {
    "name" : "encounterrole"
  }, {
    "name" : "encountertype"
  }, {
    "name" : "entitymapping"
  }, {
    "name" : "field"
  }, {
    "name" : "fieldtype"
  }, {
    "name" : "form"
  }, {
    "name" : "hl7"
  }, {
    "name" : "hl7source"
  }, {
    "name" : "location"
  }, {
    "name" : "locationattributetype"
  }, {
    "name" : "locationtag"
  }, {
    "name" : "obs"
  }, {
    "name" : "order"
  }, {
    "name" : "orderfrequency"
  }, {
    "name" : "ordertype"
  }, {
    "name" : "patient"
  }, {
    "name" : "patientidentifiertype"
  }, {
    "name" : "patientprofile"
  }, {
    "name" : "person"
  }, {
    "name" : "personattributetype"
  }, {
    "name" : "personimage"
  }, {
    "name" : "privilege"
  }, {
    "name" : "problem"
  }, {
    "name" : "program"
  }, {
    "name" : "programattributetype"
  }, {
    "name" : "programenrollment"
  }, {
    "name" : "provider"
  }, {
    "name" : "providerattributetype"
  }, {
    "name" : "relationship"
  }, {
    "name" : "relationshiptype"
  }, {
    "name" : "role"
  }, {
    "name" : "specimen"
  }, {
    "name" : "systemsetting"
  }, {
    "name" : "user"
  }, {
    "name" : "visit"
  }, {
    "name" : "visitattributetype"
  }, {
    "name" : "visittype"
  }, {
    "name" : "workflow"
  } ],
  "consumes" : [ "application/json" ],
  "produces" : [ "application/json", "application/xml" ],
  "paths" : {
    "/relationship/{uuid}" : {
      "post" : {
        "summary" : "Edit with given uuid, only modifying properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "relationship" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource properties to update",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/RelationshipUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "relationship response",
            "schema" : {
              "$ref" : "#/definitions/RelationshipGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "updateRelationship"
      },
      "get" : {
        "summary" : "Fetch by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "relationship" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        } ],
        "responses" : {
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "200" : {
            "description" : "relationship response",
            "schema" : {
              "$ref" : "#/definitions/RelationshipGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getRelationship"
      },
      "delete" : {
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "summary" : "Delete or purge resource by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "relationship" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "deleteRelationship"
      }
    },
    "/form/{parent-uuid}/resource" : {
      "post" : {
        "summary" : "Create resource subresource with properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "form" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource to create",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/FormResourceCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "resource response",
            "schema" : {
              "$ref" : "#/definitions/FormResourceGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "createFormResource"
      }
    },
    "/specimen/{uuid}" : {
      "post" : {
        "summary" : "Edit with given uuid, only modifying properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "specimen" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource properties to update",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/SpecimenUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "specimen response",
            "schema" : {
              "$ref" : "#/definitions/SpecimenGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "updateSpecimen"
      },
      "get" : {
        "summary" : "Fetch by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "specimen" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        } ],
        "responses" : {
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "200" : {
            "description" : "specimen response",
            "schema" : {
              "$ref" : "#/definitions/SpecimenGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getSpecimen"
      },
      "delete" : {
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "summary" : "Delete or purge resource by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "specimen" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "deleteSpecimen"
      }
    },
    "/orderfrequency" : {
      "get" : {
        "summary" : "Fetch all non-retired",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "orderfrequency" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "orderfrequency response",
            "schema" : {
              "$ref" : "#/definitions/OrderfrequencyGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getAllOrderFrequencies"
      }
    },
    "/bahmniprogramenrollment/{uuid}" : {
      "post" : {
        "summary" : "Edit with given uuid, only modifying properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "bahmniprogramenrollment" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource properties to update",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/BahmniprogramenrollmentUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "bahmniprogramenrollment response",
            "schema" : {
              "$ref" : "#/definitions/BahmniprogramenrollmentGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "updateBahmniProgramEnrollment"
      },
      "get" : {
        "summary" : "Fetch by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "bahmniprogramenrollment" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        } ],
        "responses" : {
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "200" : {
            "description" : "bahmniprogramenrollment response",
            "schema" : {
              "$ref" : "#/definitions/BahmniprogramenrollmentGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getBahmniProgramEnrollment"
      },
      "delete" : {
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "summary" : "Delete or purge resource by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "bahmniprogramenrollment" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "deleteBahmniProgramEnrollment"
      }
    },
    "/conceptclass/{uuid}" : {
      "post" : {
        "summary" : "Edit with given uuid, only modifying properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "conceptclass" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource properties to update",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/ConceptclassUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "conceptclass response",
            "schema" : {
              "$ref" : "#/definitions/ConceptclassGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "updateConceptClass"
      },
      "get" : {
        "summary" : "Fetch by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "conceptclass" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        } ],
        "responses" : {
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "200" : {
            "description" : "conceptclass response",
            "schema" : {
              "$ref" : "#/definitions/ConceptclassGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getConceptClass"
      },
      "delete" : {
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "summary" : "Delete or purge resource by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "conceptclass" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "deleteConceptClass"
      }
    },
    "/form/{parent-uuid}/formfield/{uuid}" : {
      "post" : {
        "summary" : "Edit formfield subresource with given uuid, only modifying properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "form" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource properties to update",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/FormFormfieldUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "formfield response",
            "schema" : {
              "$ref" : "#/definitions/FormFormfieldGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "updateFormField"
      },
      "get" : {
        "summary" : "Fetch formfield subresources by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "form" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        } ],
        "responses" : {
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "200" : {
            "description" : "formfield response",
            "schema" : {
              "$ref" : "#/definitions/FormFormfieldGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getFormField"
      },
      "delete" : {
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "summary" : "Delete or purge resource by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "form" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "deleteFormField"
      }
    },
    "/privilege" : {
      "post" : {
        "summary" : "Create with properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "privilege" ],
        "parameters" : [ {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource to create",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/PrivilegeCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "privilege response",
            "schema" : {
              "$ref" : "#/definitions/PrivilegeGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "createPrivilege"
      }
    },
    "/bahmniorderset/{parent-uuid}/bahmniordersetmember/{uuid}" : {
      "post" : {
        "summary" : "Edit bahmniordersetmember subresource with given uuid, only modifying properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "bahmniorderset" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource properties to update",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/BahmniordersetBahmniordersetmemberUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "bahmniordersetmember response",
            "schema" : {
              "$ref" : "#/definitions/BahmniordersetBahmniordersetmemberGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "updateBahmniOrderSetMemberSub"
      },
      "get" : {
        "summary" : "Fetch bahmniordersetmember subresources by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "bahmniorderset" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        } ],
        "responses" : {
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "200" : {
            "description" : "bahmniordersetmember response",
            "schema" : {
              "$ref" : "#/definitions/BahmniordersetBahmniordersetmemberGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getBahmniOrderSetMemberSub"
      },
      "delete" : {
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "summary" : "Delete or purge resource by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "bahmniorderset" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "deleteBahmniOrderSetMemberSub"
      }
    },
    "/program" : {
      "post" : {
        "summary" : "Create with properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "program" ],
        "parameters" : [ {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource to create",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/ProgramCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "program response",
            "schema" : {
              "$ref" : "#/definitions/ProgramGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "createProgram"
      },
      "get" : {
        "summary" : "Fetch all non-retired",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "program" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "program response",
            "schema" : {
              "$ref" : "#/definitions/ProgramGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getAllPrograms"
      }
    },
    "/location" : {
      "post" : {
        "summary" : "Create with properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "location" ],
        "parameters" : [ {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource to create",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/LocationCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "location response",
            "schema" : {
              "$ref" : "#/definitions/LocationGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "createLocation"
      },
      "get" : {
        "description" : "All search parameters are optional",
        "summary" : "Fetch all non-retired location resources or perform search",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "location" ],
        "parameters" : [ {
          "name" : "tags",
          "in" : "query",
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "type" : "string"
        }, {
          "name" : "tag",
          "in" : "query",
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "location response",
            "schema" : {
              "$ref" : "#/definitions/LocationGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getAllLocations"
      }
    },
    "/order" : {
      "post" : {
        "description" : "Certain properties may be required depending on type",
        "summary" : "Create with properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "order" ],
        "parameters" : [ {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource to create",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/OrderCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "order response",
            "schema" : {
              "$ref" : "#/definitions/OrderGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "createBahmniOrder"
      },
      "get" : {
        "description" : "At least one search parameter must be specified",
        "summary" : "Search for order",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "order" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        }, {
          "name" : "patientUuid",
          "in" : "query",
          "type" : "string"
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "type" : "string"
        }, {
          "name" : "orderTypeUuid",
          "in" : "query",
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "order response",
            "schema" : { }
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getAllBahmniOrders"
      }
    },
    "/caresetting" : {
      "get" : {
        "summary" : "Fetch all non-retired",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "caresetting" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "caresetting response",
            "schema" : {
              "$ref" : "#/definitions/CaresettingGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getAllCareSettings"
      }
    },
    "/encountertype" : {
      "post" : {
        "summary" : "Create with properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "encountertype" ],
        "parameters" : [ {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource to create",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/EncountertypeCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "encountertype response",
            "schema" : {
              "$ref" : "#/definitions/EncountertypeGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "createEncounterType"
      },
      "get" : {
        "summary" : "Fetch all non-retired",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "encountertype" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "encountertype response",
            "schema" : {
              "$ref" : "#/definitions/EncountertypeGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getAllEncounterTypes"
      }
    },
    "/visit/{uuid}" : {
      "post" : {
        "summary" : "Edit with given uuid, only modifying properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "visit" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource properties to update",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/VisitUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "visit response",
            "schema" : {
              "$ref" : "#/definitions/VisitGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "updateVisit"
      },
      "get" : {
        "summary" : "Fetch by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "visit" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        } ],
        "responses" : {
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "200" : {
            "description" : "visit response",
            "schema" : {
              "$ref" : "#/definitions/VisitGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getVisit"
      },
      "delete" : {
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "summary" : "Delete or purge resource by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "visit" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "deleteVisit"
      }
    },
    "/hl7/{uuid}" : { },
    "/concept/{parent-uuid}/mapping/{uuid}" : {
      "post" : {
        "summary" : "Edit mapping subresource with given uuid, only modifying properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "concept" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource properties to update",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/ConceptMappingUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "mapping response",
            "schema" : {
              "$ref" : "#/definitions/ConceptMappingGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "updateConceptMap"
      },
      "get" : {
        "summary" : "Fetch mapping subresources by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "concept" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        } ],
        "responses" : {
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "200" : {
            "description" : "mapping response",
            "schema" : {
              "$ref" : "#/definitions/ConceptMappingGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getConceptMap"
      },
      "delete" : {
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "summary" : "Delete or purge resource by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "concept" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "deleteConceptMap"
      }
    },
    "/conceptmaptype/{uuid}" : {
      "post" : {
        "summary" : "Edit with given uuid, only modifying properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "conceptmaptype" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource properties to update",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/ConceptmaptypeUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "conceptmaptype response",
            "schema" : {
              "$ref" : "#/definitions/ConceptmaptypeGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "updateConceptMapType"
      },
      "get" : {
        "summary" : "Fetch by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "conceptmaptype" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        } ],
        "responses" : {
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "200" : {
            "description" : "conceptmaptype response",
            "schema" : {
              "$ref" : "#/definitions/ConceptmaptypeGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getConceptMapType"
      },
      "delete" : {
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "summary" : "Delete or purge resource by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "conceptmaptype" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "deleteConceptMapType"
      }
    },
    "/location/{parent-uuid}/attribute/{uuid}" : {
      "post" : {
        "summary" : "Edit attribute subresource with given uuid, only modifying properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "location" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource properties to update",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/LocationAttributeUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "attribute response",
            "schema" : {
              "$ref" : "#/definitions/LocationAttributeGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "updateLocationAttribute"
      },
      "get" : {
        "summary" : "Fetch attribute subresources by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "location" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        } ],
        "responses" : {
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "200" : {
            "description" : "attribute response",
            "schema" : {
              "$ref" : "#/definitions/LocationAttributeGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getLocationAttribute"
      },
      "delete" : {
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "summary" : "Delete or purge resource by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "location" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "deleteLocationAttribute"
      }
    },
    "/form/{uuid}" : {
      "post" : {
        "summary" : "Edit with given uuid, only modifying properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "form" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource properties to update",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/FormUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "form response",
            "schema" : {
              "$ref" : "#/definitions/FormGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "updateForm"
      },
      "get" : {
        "summary" : "Fetch by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "form" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        } ],
        "responses" : {
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "200" : {
            "description" : "form response",
            "schema" : {
              "$ref" : "#/definitions/FormGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getForm"
      },
      "delete" : {
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "summary" : "Delete or purge resource by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "form" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "deleteForm"
      }
    },
    "/activelisttype" : { },
    "/hl7source/{uuid}" : {
      "post" : {
        "summary" : "Edit with given uuid, only modifying properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "hl7source" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource properties to update",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/Hl7sourceUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "hl7source response",
            "schema" : {
              "$ref" : "#/definitions/Hl7sourceGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "updateHL7Source"
      },
      "delete" : {
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "summary" : "Delete or purge resource by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "hl7source" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "deleteHL7Source"
      }
    },
    "/field/{parent-uuid}/answer" : {
      "post" : {
        "summary" : "Create answer subresource with properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "field" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource to create",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/FieldAnswerCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "answer response",
            "schema" : {
              "$ref" : "#/definitions/FieldAnswerGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "createFieldAnswer"
      },
      "get" : {
        "description" : "All search parameters are optional",
        "summary" : "Fetch all non-retired answer resources or perform search",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "field" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "answer response",
            "schema" : {
              "$ref" : "#/definitions/FieldAnswerGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getAllFieldAnswers"
      }
    },
    "/problem/{uuid}" : {
      "post" : {
        "summary" : "Edit with given uuid, only modifying properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "problem" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource properties to update",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/ProblemUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "problem response",
            "schema" : {
              "$ref" : "#/definitions/ProblemGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "updateProblem"
      },
      "get" : {
        "summary" : "Fetch by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "problem" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        } ],
        "responses" : {
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "200" : {
            "description" : "problem response",
            "schema" : {
              "$ref" : "#/definitions/ProblemGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getProblem"
      },
      "delete" : {
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "summary" : "Delete or purge resource by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "problem" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "deleteProblem"
      }
    },
    "/drug/{uuid}" : {
      "post" : {
        "summary" : "Edit with given uuid, only modifying properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "drug" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource properties to update",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/DrugUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "drug response",
            "schema" : {
              "$ref" : "#/definitions/DrugGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "updateBahmniDrug"
      },
      "get" : {
        "summary" : "Fetch by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "drug" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        } ],
        "responses" : {
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "200" : {
            "description" : "drug response",
            "schema" : {
              "$ref" : "#/definitions/DrugGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getBahmniDrug"
      },
      "delete" : {
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "summary" : "Delete or purge resource by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "drug" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "deleteBahmniDrug"
      }
    },
    "/person/{parent-uuid}/attribute" : {
      "post" : {
        "summary" : "Create attribute subresource with properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "person" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource to create",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/PersonAttributeCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "attribute response",
            "schema" : {
              "$ref" : "#/definitions/PersonAttributeGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "createPersonAttribute"
      },
      "get" : {
        "summary" : "Fetch all non-retired attribute subresources",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "person" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "attribute response",
            "schema" : {
              "$ref" : "#/definitions/PersonAttributeGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getAllPersonAttributes"
      }
    },
    "/encounter/{parent-uuid}/encounterprovider" : {
      "post" : {
        "summary" : "Create encounterprovider subresource with properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "encounter" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource to create",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/EncounterEncounterproviderCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "encounterprovider response",
            "schema" : {
              "$ref" : "#/definitions/EncounterEncounterproviderGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "createEncounterProvider"
      },
      "get" : {
        "summary" : "Fetch all non-retired encounterprovider subresources",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "encounter" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "encounterprovider response",
            "schema" : {
              "$ref" : "#/definitions/EncounterEncounterproviderGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getAllEncounterProviders"
      }
    },
    "/specimen" : {
      "post" : {
        "summary" : "Create with properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "specimen" ],
        "parameters" : [ {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource to create",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/SpecimenCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "specimen response",
            "schema" : {
              "$ref" : "#/definitions/SpecimenGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "createSpecimen"
      },
      "get" : {
        "description" : "At least one search parameter must be specified",
        "summary" : "Search for specimen",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "specimen" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "type" : "string"
        }, {
          "name" : "patientProgramUuid",
          "in" : "query",
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "specimen response",
            "schema" : { }
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getAllSpecimens"
      }
    },
    "/provider/{parent-uuid}/attribute" : {
      "post" : {
        "summary" : "Create attribute subresource with properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "provider" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource to create",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/ProviderAttributeCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "attribute response",
            "schema" : {
              "$ref" : "#/definitions/ProviderAttributeGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "createProviderAttribute"
      },
      "get" : {
        "summary" : "Fetch all non-retired attribute subresources",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "provider" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "attribute response",
            "schema" : {
              "$ref" : "#/definitions/ProviderAttributeGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getAllProviderAttributes"
      }
    },
    "/visit" : {
      "post" : {
        "summary" : "Create with properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "visit" ],
        "parameters" : [ {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource to create",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/VisitCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "visit response",
            "schema" : {
              "$ref" : "#/definitions/VisitGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "createVisit"
      },
      "get" : {
        "summary" : "Fetch all non-retired",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "visit" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "visit response",
            "schema" : {
              "$ref" : "#/definitions/VisitGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getAllVisits"
      }
    },
    "/conceptsource/{uuid}" : {
      "post" : {
        "summary" : "Edit with given uuid, only modifying properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "conceptsource" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource properties to update",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/ConceptsourceUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "conceptsource response",
            "schema" : {
              "$ref" : "#/definitions/ConceptsourceGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "updateConceptSource"
      },
      "get" : {
        "summary" : "Fetch by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "conceptsource" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        } ],
        "responses" : {
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "200" : {
            "description" : "conceptsource response",
            "schema" : {
              "$ref" : "#/definitions/ConceptsourceGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getConceptSource"
      },
      "delete" : {
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "summary" : "Delete or purge resource by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "conceptsource" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "deleteConceptSource"
      }
    },
    "/programenrollment/{parent-uuid}/state" : {
      "post" : {
        "summary" : "Create state subresource with properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "programenrollment" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource to create",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/ProgramenrollmentStateCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "state response",
            "schema" : {
              "$ref" : "#/definitions/ProgramenrollmentStateGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "createPatientState"
      }
    },
    "/entitymapping/{uuid}" : {
      "get" : {
        "summary" : "Fetch by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "entitymapping" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        } ],
        "responses" : {
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "200" : {
            "description" : "entitymapping response",
            "schema" : {
              "$ref" : "#/definitions/EntitymappingGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getEntityMapping"
      },
      "delete" : {
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "summary" : "Delete or purge resource by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "entitymapping" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "deleteEntityMapping"
      }
    },
    "/concept/{parent-uuid}/name/{uuid}" : {
      "post" : {
        "summary" : "Edit name subresource with given uuid, only modifying properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "concept" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource properties to update",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/ConceptNameUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "name response",
            "schema" : {
              "$ref" : "#/definitions/ConceptNameGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "updateConceptName"
      },
      "get" : {
        "summary" : "Fetch name subresources by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "concept" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        } ],
        "responses" : {
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "200" : {
            "description" : "name response",
            "schema" : {
              "$ref" : "#/definitions/ConceptNameGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getConceptName"
      },
      "delete" : {
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "summary" : "Delete or purge resource by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "concept" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "deleteConceptName"
      }
    },
    "/patientidentifiertype/{uuid}" : {
      "post" : {
        "summary" : "Edit with given uuid, only modifying properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "patientidentifiertype" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource properties to update",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/PatientidentifiertypeUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "patientidentifiertype response",
            "schema" : {
              "$ref" : "#/definitions/PatientidentifiertypeGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "updatePatientIdentifierType"
      },
      "get" : {
        "summary" : "Fetch by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "patientidentifiertype" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        } ],
        "responses" : {
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "200" : {
            "description" : "patientidentifiertype response",
            "schema" : {
              "$ref" : "#/definitions/PatientidentifiertypeGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getPatientIdentifierType"
      },
      "delete" : {
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "summary" : "Delete or purge resource by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "patientidentifiertype" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "deletePatientIdentifierType"
      }
    },
    "/conceptmaptype" : {
      "post" : {
        "summary" : "Create with properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "conceptmaptype" ],
        "parameters" : [ {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource to create",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/ConceptmaptypeCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "conceptmaptype response",
            "schema" : {
              "$ref" : "#/definitions/ConceptmaptypeGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "createConceptMapType"
      },
      "get" : {
        "summary" : "Fetch all non-retired",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "conceptmaptype" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "conceptmaptype response",
            "schema" : {
              "$ref" : "#/definitions/ConceptmaptypeGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getAllConceptMapTypes"
      }
    },
    "/activelisttype/{uuid}" : { },
    "/cohort/{parent-uuid}/member/{uuid}" : {
      "post" : {
        "summary" : "Edit member subresource with given uuid, only modifying properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "cohort" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource properties to update",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/CohortMemberUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "member response",
            "schema" : {
              "$ref" : "#/definitions/CohortMemberGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "updateCohortMember"
      },
      "get" : {
        "summary" : "Fetch member subresources by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "cohort" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        } ],
        "responses" : {
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "200" : {
            "description" : "member response",
            "schema" : {
              "$ref" : "#/definitions/CohortMemberGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getCohortMember"
      },
      "delete" : {
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "summary" : "Delete or purge resource by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "cohort" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "deleteCohortMember"
      }
    },
    "/patientprofile/{uuid}" : {
      "post" : {
        "summary" : "Edit with given uuid, only modifying properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "patientprofile" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource properties to update",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/PatientprofileUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "patientprofile response",
            "schema" : {
              "$ref" : "#/definitions/PatientprofileGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "updatePatientProfile"
      }
    },
    "/cohort/{uuid}" : {
      "post" : {
        "summary" : "Edit with given uuid, only modifying properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "cohort" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource properties to update",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/CohortUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "cohort response",
            "schema" : {
              "$ref" : "#/definitions/CohortGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "updateCohort"
      },
      "get" : {
        "summary" : "Fetch by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "cohort" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        } ],
        "responses" : {
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "200" : {
            "description" : "cohort response",
            "schema" : {
              "$ref" : "#/definitions/CohortGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getCohort"
      },
      "delete" : {
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "summary" : "Delete or purge resource by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "cohort" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "deleteCohort"
      }
    },
    "/provider/{uuid}" : {
      "post" : {
        "summary" : "Edit with given uuid, only modifying properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "provider" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource properties to update",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/ProviderUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "provider response",
            "schema" : {
              "$ref" : "#/definitions/ProviderGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "updateProvider"
      },
      "get" : {
        "summary" : "Fetch by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "provider" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        } ],
        "responses" : {
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "200" : {
            "description" : "provider response",
            "schema" : {
              "$ref" : "#/definitions/ProviderGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getProvider"
      },
      "delete" : {
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "summary" : "Delete or purge resource by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "provider" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "deleteProvider"
      }
    },
    "/role/{uuid}" : {
      "post" : {
        "summary" : "Edit with given uuid, only modifying properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "role" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource properties to update",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/RoleUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "role response",
            "schema" : {
              "$ref" : "#/definitions/RoleGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "updateRole"
      },
      "get" : {
        "summary" : "Fetch by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "role" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        } ],
        "responses" : {
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "200" : {
            "description" : "role response",
            "schema" : {
              "$ref" : "#/definitions/RoleGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getRole"
      },
      "delete" : {
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "summary" : "Delete or purge resource by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "role" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "deleteRole"
      }
    },
    "/concept/{uuid}" : {
      "post" : {
        "summary" : "Edit with given uuid, only modifying properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "concept" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource properties to update",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/ConceptUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "concept response",
            "schema" : {
              "$ref" : "#/definitions/ConceptGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "updateBahmniConcept"
      },
      "get" : {
        "summary" : "Fetch by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "concept" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        } ],
        "responses" : {
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "200" : {
            "description" : "concept response",
            "schema" : {
              "$ref" : "#/definitions/ConceptGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getBahmniConcept"
      },
      "delete" : {
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "summary" : "Delete or purge resource by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "concept" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "deleteBahmniConcept"
      }
    },
    "/patient/{uuid}" : {
      "post" : {
        "summary" : "Edit with given uuid, only modifying properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "patient" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource properties to update",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/PatientUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "patient response",
            "schema" : {
              "$ref" : "#/definitions/PatientGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "updatePatient"
      },
      "get" : {
        "summary" : "Fetch by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "patient" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        } ],
        "responses" : {
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "200" : {
            "description" : "patient response",
            "schema" : {
              "$ref" : "#/definitions/PatientGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getPatient"
      },
      "delete" : {
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "summary" : "Delete or purge resource by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "patient" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "deletePatient"
      }
    },
    "/encounterrole" : {
      "post" : {
        "summary" : "Create with properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "encounterrole" ],
        "parameters" : [ {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource to create",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/EncounterroleCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "encounterrole response",
            "schema" : {
              "$ref" : "#/definitions/EncounterroleGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "createEncounterRole"
      },
      "get" : {
        "summary" : "Fetch all non-retired",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "encounterrole" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "encounterrole response",
            "schema" : {
              "$ref" : "#/definitions/EncounterroleGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getAllEncounterRoles"
      }
    },
    "/relationshiptype" : {
      "post" : {
        "summary" : "Create with properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "relationshiptype" ],
        "parameters" : [ {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource to create",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/RelationshiptypeCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "relationshiptype response",
            "schema" : {
              "$ref" : "#/definitions/RelationshiptypeGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "createRelationShipType"
      },
      "get" : {
        "summary" : "Fetch all non-retired",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "relationshiptype" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "relationshiptype response",
            "schema" : {
              "$ref" : "#/definitions/RelationshiptypeGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getAllRelationShipTypes"
      }
    },
    "/bahmniconceptanswer/{uuid}" : { },
    "/form/{parent-uuid}/resource/{uuid}" : {
      "post" : {
        "summary" : "Edit resource subresource with given uuid, only modifying properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "form" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource properties to update",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/FormResourceUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "resource response",
            "schema" : {
              "$ref" : "#/definitions/FormResourceGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "updateFormResource"
      },
      "delete" : {
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "summary" : "Delete or purge resource by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "form" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "deleteFormResource"
      }
    },
    "/customdatatype/{parent-uuid}/handlers" : {
      "get" : {
        "summary" : "Fetch all non-retired handlers subresources",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "customdatatype" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "handlers response",
            "schema" : {
              "$ref" : "#/definitions/CustomdatatypeHandlersGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getAllCustomDatatypeHandlers"
      }
    },
    "/conceptreferenceterm/{uuid}" : {
      "post" : {
        "summary" : "Edit with given uuid, only modifying properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "conceptreferenceterm" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource properties to update",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/ConceptreferencetermUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "conceptreferenceterm response",
            "schema" : {
              "$ref" : "#/definitions/ConceptreferencetermGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "updateConceptReferenceTerm"
      },
      "get" : {
        "summary" : "Fetch by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "conceptreferenceterm" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        } ],
        "responses" : {
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "200" : {
            "description" : "conceptreferenceterm response",
            "schema" : {
              "$ref" : "#/definitions/ConceptreferencetermGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getConceptReferenceTerm"
      },
      "delete" : {
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "summary" : "Delete or purge resource by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "conceptreferenceterm" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "deleteConceptReferenceTerm"
      }
    },
    "/field" : {
      "post" : {
        "summary" : "Create with properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "field" ],
        "parameters" : [ {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource to create",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/FieldCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "field response",
            "schema" : {
              "$ref" : "#/definitions/FieldGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "createField"
      },
      "get" : {
        "summary" : "Fetch all non-retired",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "field" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "field response",
            "schema" : {
              "$ref" : "#/definitions/FieldGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getAllFields"
      }
    },
    "/orderfrequency/{uuid}" : {
      "post" : {
        "summary" : "Edit with given uuid, only modifying properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "orderfrequency" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource properties to update",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/OrderfrequencyUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "orderfrequency response",
            "schema" : {
              "$ref" : "#/definitions/OrderfrequencyGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "updateOrderFrequency"
      },
      "get" : {
        "summary" : "Fetch by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "orderfrequency" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        } ],
        "responses" : {
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "200" : {
            "description" : "orderfrequency response",
            "schema" : {
              "$ref" : "#/definitions/OrderfrequencyGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getOrderFrequency"
      },
      "delete" : {
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "summary" : "Delete or purge resource by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "orderfrequency" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "deleteOrderFrequency"
      }
    },
    "/conceptreferencetermmap/{uuid}" : {
      "post" : {
        "summary" : "Edit with given uuid, only modifying properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "conceptreferencetermmap" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource properties to update",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/ConceptreferencetermmapUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "conceptreferencetermmap response",
            "schema" : {
              "$ref" : "#/definitions/ConceptreferencetermmapGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "updateConceptReferenceTermMap"
      },
      "get" : {
        "summary" : "Fetch by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "conceptreferencetermmap" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        } ],
        "responses" : {
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "200" : {
            "description" : "conceptreferencetermmap response",
            "schema" : {
              "$ref" : "#/definitions/ConceptreferencetermmapGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getConceptReferenceTermMap"
      },
      "delete" : {
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "summary" : "Delete or purge resource by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "conceptreferencetermmap" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "deleteConceptReferenceTermMap"
      }
    },
    "/field/{uuid}" : {
      "post" : {
        "summary" : "Edit with given uuid, only modifying properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "field" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource properties to update",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/FieldUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "field response",
            "schema" : {
              "$ref" : "#/definitions/FieldGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "updateField"
      },
      "get" : {
        "summary" : "Fetch by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "field" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        } ],
        "responses" : {
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "200" : {
            "description" : "field response",
            "schema" : {
              "$ref" : "#/definitions/FieldGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getField"
      },
      "delete" : {
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "summary" : "Delete or purge resource by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "field" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "deleteField"
      }
    },
    "/programenrollment/{parent-uuid}/state/{uuid}" : {
      "post" : {
        "summary" : "Edit state subresource with given uuid, only modifying properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "programenrollment" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource properties to update",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/ProgramenrollmentStateUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "state response",
            "schema" : {
              "$ref" : "#/definitions/ProgramenrollmentStateGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "updatePatientState"
      },
      "get" : {
        "summary" : "Fetch state subresources by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "programenrollment" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        } ],
        "responses" : {
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "200" : {
            "description" : "state response",
            "schema" : {
              "$ref" : "#/definitions/ProgramenrollmentStateGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getPatientState"
      },
      "delete" : {
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "summary" : "Delete or purge resource by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "programenrollment" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "deletePatientState"
      }
    },
    "/patientidentifiertype" : {
      "post" : {
        "summary" : "Create with properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "patientidentifiertype" ],
        "parameters" : [ {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource to create",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/PatientidentifiertypeCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "patientidentifiertype response",
            "schema" : {
              "$ref" : "#/definitions/PatientidentifiertypeGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "createPatientIdentifierType"
      },
      "get" : {
        "summary" : "Fetch all non-retired",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "patientidentifiertype" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "patientidentifiertype response",
            "schema" : {
              "$ref" : "#/definitions/PatientidentifiertypeGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getAllPatientIdentifierTypes"
      }
    },
    "/conceptdatatype" : {
      "post" : {
        "summary" : "Create with properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "conceptdatatype" ],
        "parameters" : [ {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource to create",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/ConceptdatatypeCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "conceptdatatype response",
            "schema" : {
              "$ref" : "#/definitions/ConceptdatatypeGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "createConceptDatatype"
      },
      "get" : {
        "summary" : "Fetch all non-retired",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "conceptdatatype" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "conceptdatatype response",
            "schema" : {
              "$ref" : "#/definitions/ConceptdatatypeGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getAllConceptDatatypes"
      }
    },
    "/programattributetype" : {
      "post" : {
        "summary" : "Create with properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "programattributetype" ],
        "parameters" : [ {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource to create",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/ProgramattributetypeCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "programattributetype response",
            "schema" : {
              "$ref" : "#/definitions/ProgramattributetypeGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "createProgramAttributeType"
      },
      "get" : {
        "summary" : "Fetch all non-retired",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "programattributetype" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "programattributetype response",
            "schema" : {
              "$ref" : "#/definitions/ProgramattributetypeGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getAllProgramAttributeTypes"
      }
    },
    "/fieldtype" : {
      "post" : {
        "summary" : "Create with properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "fieldtype" ],
        "parameters" : [ {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource to create",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/FieldtypeCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "fieldtype response",
            "schema" : {
              "$ref" : "#/definitions/FieldtypeGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "createFieldType"
      },
      "get" : {
        "summary" : "Fetch all non-retired",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "fieldtype" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "fieldtype response",
            "schema" : {
              "$ref" : "#/definitions/FieldtypeGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getAllFieldTypes"
      }
    },
    "/personimage/{uuid}" : {
      "post" : {
        "summary" : "Edit with given uuid, only modifying properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "personimage" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource properties to update",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/PersonimageUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "personimage response",
            "schema" : {
              "$ref" : "#/definitions/PersonimageGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "updatePersonImage"
      },
      "get" : {
        "summary" : "Fetch by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "personimage" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        } ],
        "responses" : {
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "200" : {
            "description" : "personimage response",
            "schema" : {
              "$ref" : "#/definitions/PersonimageGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getPersonImage"
      },
      "delete" : {
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "summary" : "Delete or purge resource by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "personimage" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "deletePersonImage"
      }
    },
    "/drug/{parent-uuid}/ingredient/{uuid}" : {
      "post" : {
        "summary" : "Edit ingredient subresource with given uuid, only modifying properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "drug" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource properties to update",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/DrugIngredientUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "ingredient response",
            "schema" : {
              "$ref" : "#/definitions/DrugIngredientGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "updateDrugIngredient"
      },
      "get" : {
        "summary" : "Fetch ingredient subresources by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "drug" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        } ],
        "responses" : {
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "200" : {
            "description" : "ingredient response",
            "schema" : {
              "$ref" : "#/definitions/DrugIngredientGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getDrugIngredient"
      },
      "delete" : {
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "summary" : "Delete or purge resource by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "drug" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "deleteDrugIngredient"
      }
    },
    "/bahmniprogramenrollment/{parent-uuid}/attribute" : {
      "post" : {
        "summary" : "Create attribute subresource with properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "bahmniprogramenrollment" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource to create",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/BahmniprogramenrollmentAttributeCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "attribute response",
            "schema" : {
              "$ref" : "#/definitions/BahmniprogramenrollmentAttributeGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "createPatientProgramAttribute"
      },
      "get" : {
        "summary" : "Fetch all non-retired attribute subresources",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "bahmniprogramenrollment" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "attribute response",
            "schema" : {
              "$ref" : "#/definitions/BahmniprogramenrollmentAttributeGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getAllPatientProgramAttributes"
      }
    },
    "/conceptsearch" : { },
    "/privilege/{uuid}" : {
      "post" : {
        "summary" : "Edit with given uuid, only modifying properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "privilege" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource properties to update",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/PrivilegeUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "privilege response",
            "schema" : {
              "$ref" : "#/definitions/PrivilegeGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "updatePrivilege"
      },
      "delete" : {
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "summary" : "Delete or purge resource by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "privilege" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "deletePrivilege"
      }
    },
    "/person/{parent-uuid}/name/{uuid}" : {
      "post" : {
        "summary" : "Edit name subresource with given uuid, only modifying properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "person" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource properties to update",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/PersonNameUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "name response",
            "schema" : {
              "$ref" : "#/definitions/PersonNameGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "updatePersonName"
      },
      "get" : {
        "summary" : "Fetch name subresources by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "person" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        } ],
        "responses" : {
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "200" : {
            "description" : "name response",
            "schema" : {
              "$ref" : "#/definitions/PersonNameGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getPersonName"
      },
      "delete" : {
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "summary" : "Delete or purge resource by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "person" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "deletePersonName"
      }
    },
    "/workflow/{parent-uuid}/state/{uuid}" : {
      "get" : {
        "summary" : "Fetch state subresources by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "workflow" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        } ],
        "responses" : {
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "200" : {
            "description" : "state response",
            "schema" : {
              "$ref" : "#/definitions/WorkflowStateGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getProgramWorkflowState"
      },
      "delete" : {
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "summary" : "Delete or purge resource by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "workflow" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "deleteProgramWorkflowState"
      }
    },
    "/concept/{parent-uuid}/name" : {
      "post" : {
        "summary" : "Create name subresource with properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "concept" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource to create",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/ConceptNameCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "name response",
            "schema" : {
              "$ref" : "#/definitions/ConceptNameGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "createConceptName"
      },
      "get" : {
        "summary" : "Fetch all non-retired name subresources",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "concept" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "name response",
            "schema" : {
              "$ref" : "#/definitions/ConceptNameGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getAllConceptNames"
      }
    },
    "/person" : {
      "post" : {
        "summary" : "Create with properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "person" ],
        "parameters" : [ {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource to create",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/PersonCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "person response",
            "schema" : {
              "$ref" : "#/definitions/PersonGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "createPerson"
      }
    },
    "/locationattributetype" : {
      "post" : {
        "summary" : "Create with properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "locationattributetype" ],
        "parameters" : [ {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource to create",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/LocationattributetypeCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "locationattributetype response",
            "schema" : {
              "$ref" : "#/definitions/LocationattributetypeGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "createLocationAttributeType"
      },
      "get" : {
        "summary" : "Fetch all non-retired",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "locationattributetype" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "locationattributetype response",
            "schema" : {
              "$ref" : "#/definitions/LocationattributetypeGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getAllLocationAttributeTypes"
      }
    },
    "/bahmniorderset/{parent-uuid}/bahmniordersetmember" : {
      "post" : {
        "summary" : "Create bahmniordersetmember subresource with properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "bahmniorderset" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource to create",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/BahmniordersetBahmniordersetmemberCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "bahmniordersetmember response",
            "schema" : {
              "$ref" : "#/definitions/BahmniordersetBahmniordersetmemberGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "createBahmniOrderSetMemberSub"
      },
      "get" : {
        "summary" : "Fetch all non-retired bahmniordersetmember subresources",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "bahmniorderset" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "bahmniordersetmember response",
            "schema" : {
              "$ref" : "#/definitions/BahmniordersetBahmniordersetmemberGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getAllBahmniOrderSetMemberSubs"
      }
    },
    "/bahmniconceptanswer" : {
      "get" : {
        "description" : "At least one search parameter must be specified",
        "summary" : "Search for bahmniconceptanswer",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "bahmniconceptanswer" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "type" : "string"
        }, {
          "name" : "question",
          "in" : "query",
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "bahmniconceptanswer response",
            "schema" : { }
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getAllBahmniConceptAnswers"
      }
    },
    "/encounter/{uuid}" : {
      "post" : {
        "summary" : "Edit with given uuid, only modifying properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "encounter" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource properties to update",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/EncounterUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "encounter response",
            "schema" : {
              "$ref" : "#/definitions/EncounterGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "updateEncounter"
      },
      "get" : {
        "summary" : "Fetch by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "encounter" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        } ],
        "responses" : {
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "200" : {
            "description" : "encounter response",
            "schema" : {
              "$ref" : "#/definitions/EncounterGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getEncounter"
      },
      "delete" : {
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "summary" : "Delete or purge resource by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "encounter" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "deleteEncounter"
      }
    },
    "/ordertype/{uuid}" : {
      "post" : {
        "summary" : "Edit with given uuid, only modifying properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "ordertype" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource properties to update",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/OrdertypeUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "ordertype response",
            "schema" : {
              "$ref" : "#/definitions/OrdertypeGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "updateOrderType"
      },
      "get" : {
        "summary" : "Fetch by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "ordertype" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        } ],
        "responses" : {
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "200" : {
            "description" : "ordertype response",
            "schema" : {
              "$ref" : "#/definitions/OrdertypeGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getOrderType"
      },
      "delete" : {
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "summary" : "Delete or purge resource by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "ordertype" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "deleteOrderType"
      }
    },
    "/visit/{parent-uuid}/attribute" : {
      "post" : {
        "summary" : "Create attribute subresource with properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "visit" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource to create",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/VisitAttributeCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "attribute response",
            "schema" : {
              "$ref" : "#/definitions/VisitAttributeGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "createVisitAttribute"
      },
      "get" : {
        "summary" : "Fetch all non-retired attribute subresources",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "visit" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "attribute response",
            "schema" : {
              "$ref" : "#/definitions/VisitAttributeGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getAllVisitAttributes"
      }
    },
    "/bahmniprogramenrollment/{parent-uuid}/attribute/{uuid}" : {
      "post" : {
        "summary" : "Edit attribute subresource with given uuid, only modifying properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "bahmniprogramenrollment" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource properties to update",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/BahmniprogramenrollmentAttributeUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "attribute response",
            "schema" : {
              "$ref" : "#/definitions/BahmniprogramenrollmentAttributeGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "updatePatientProgramAttribute"
      },
      "get" : {
        "summary" : "Fetch attribute subresources by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "bahmniprogramenrollment" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        } ],
        "responses" : {
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "200" : {
            "description" : "attribute response",
            "schema" : {
              "$ref" : "#/definitions/BahmniprogramenrollmentAttributeGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getPatientProgramAttribute"
      },
      "delete" : {
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "summary" : "Delete or purge resource by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "bahmniprogramenrollment" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "deletePatientProgramAttribute"
      }
    },
    "/conceptsource" : {
      "post" : {
        "summary" : "Create with properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "conceptsource" ],
        "parameters" : [ {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource to create",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/ConceptsourceCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "conceptsource response",
            "schema" : {
              "$ref" : "#/definitions/ConceptsourceGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "createConceptSource"
      },
      "get" : {
        "summary" : "Fetch all non-retired",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "conceptsource" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "conceptsource response",
            "schema" : {
              "$ref" : "#/definitions/ConceptsourceGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getAllConceptSources"
      }
    },
    "/form/{parent-uuid}/formfield" : {
      "post" : {
        "summary" : "Create formfield subresource with properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "form" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource to create",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/FormFormfieldCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "formfield response",
            "schema" : {
              "$ref" : "#/definitions/FormFormfieldGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "createFormField"
      },
      "get" : {
        "summary" : "Fetch all non-retired formfield subresources",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "form" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "formfield response",
            "schema" : {
              "$ref" : "#/definitions/FormFormfieldGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getAllFormFields"
      }
    },
    "/bahmniorderset/{uuid}" : {
      "post" : {
        "summary" : "Edit with given uuid, only modifying properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "bahmniorderset" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource properties to update",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/BahmniordersetUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "bahmniorderset response",
            "schema" : {
              "$ref" : "#/definitions/BahmniordersetGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "updateBahmniOrderSet"
      },
      "get" : {
        "summary" : "Fetch by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "bahmniorderset" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        } ],
        "responses" : {
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "200" : {
            "description" : "bahmniorderset response",
            "schema" : {
              "$ref" : "#/definitions/BahmniordersetGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getBahmniOrderSet"
      },
      "delete" : {
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "summary" : "Delete or purge resource by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "bahmniorderset" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "deleteBahmniOrderSet"
      }
    },
    "/customdatatype/{parent-uuid}/handlers/{uuid}" : { },
    "/bahmniprogramenrollment" : {
      "post" : {
        "summary" : "Create with properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "bahmniprogramenrollment" ],
        "parameters" : [ {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource to create",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/BahmniprogramenrollmentCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "bahmniprogramenrollment response",
            "schema" : {
              "$ref" : "#/definitions/BahmniprogramenrollmentGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "createBahmniProgramEnrollment"
      }
    },
    "/bedPatientAssignment/{uuid}" : {
      "get" : {
        "summary" : "Fetch by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "bedPatientAssignment" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        } ],
        "responses" : {
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "200" : {
            "description" : "bedPatientAssignment response",
            "schema" : {
              "$ref" : "#/definitions/BedPatientAssignmentGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getBedPatientAssignment"
      },
      "delete" : {
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "summary" : "Delete or purge resource by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "bedPatientAssignment" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "deleteBedPatientAssignment"
      }
    },
    "/encounter" : {
      "post" : {
        "summary" : "Create with properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "encounter" ],
        "parameters" : [ {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource to create",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/EncounterCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "encounter response",
            "schema" : {
              "$ref" : "#/definitions/EncounterGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "createEncounter"
      },
      "get" : {
        "description" : "At least one search parameter must be specified",
        "summary" : "Search for encounter",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "encounter" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        }, {
          "name" : "patient",
          "in" : "query",
          "type" : "string"
        }, {
          "name" : "order",
          "in" : "query",
          "description" : "Must be used with patient or encounterType",
          "type" : "string"
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "type" : "string"
        }, {
          "name" : "fromdate",
          "in" : "query",
          "description" : "Must be used with patient or encounterType",
          "type" : "string"
        }, {
          "name" : "todate",
          "in" : "query",
          "description" : "Must be used with patient or encounterType",
          "type" : "string"
        }, {
          "name" : "encounterType",
          "in" : "query",
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "encounter response",
            "schema" : { }
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getAllEncounters"
      }
    },
    "/programenrollment" : {
      "post" : {
        "summary" : "Create with properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "programenrollment" ],
        "parameters" : [ {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource to create",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/ProgramenrollmentCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "programenrollment response",
            "schema" : {
              "$ref" : "#/definitions/ProgramenrollmentGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "createProgramEnrollment"
      }
    },
    "/conceptreferenceterm" : {
      "post" : {
        "summary" : "Create with properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "conceptreferenceterm" ],
        "parameters" : [ {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource to create",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/ConceptreferencetermCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "conceptreferenceterm response",
            "schema" : {
              "$ref" : "#/definitions/ConceptreferencetermGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "createConceptReferenceTerm"
      },
      "get" : {
        "description" : "All search parameters are optional",
        "summary" : "Fetch all non-retired conceptreferenceterm resources or perform search",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "conceptreferenceterm" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        }, {
          "name" : "source",
          "in" : "query",
          "type" : "string"
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "type" : "string"
        }, {
          "name" : "name",
          "in" : "query",
          "description" : "Must be used with source",
          "type" : "string"
        }, {
          "name" : "code",
          "in" : "query",
          "description" : "Must be used with source",
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "conceptreferenceterm response",
            "schema" : {
              "$ref" : "#/definitions/ConceptreferencetermGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getAllConceptReferenceTerms"
      }
    },
    "/patient/{parent-uuid}/identifier" : {
      "post" : {
        "summary" : "Create identifier subresource with properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "patient" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource to create",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/PatientIdentifierCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "identifier response",
            "schema" : {
              "$ref" : "#/definitions/PatientIdentifierGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "createPatientIdentifier"
      },
      "get" : {
        "summary" : "Fetch all non-retired identifier subresources",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "patient" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "identifier response",
            "schema" : {
              "$ref" : "#/definitions/PatientIdentifierGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getAllPatientIdentifiers"
      }
    },
    "/visittype/{uuid}" : {
      "post" : {
        "summary" : "Edit with given uuid, only modifying properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "visittype" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource properties to update",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/VisittypeUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "visittype response",
            "schema" : {
              "$ref" : "#/definitions/VisittypeGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "updateVisitType"
      },
      "get" : {
        "summary" : "Fetch by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "visittype" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        } ],
        "responses" : {
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "200" : {
            "description" : "visittype response",
            "schema" : {
              "$ref" : "#/definitions/VisittypeGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getVisitType"
      },
      "delete" : {
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "summary" : "Delete or purge resource by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "visittype" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "deleteVisitType"
      }
    },
    "/provider/{parent-uuid}/attribute/{uuid}" : {
      "post" : {
        "summary" : "Edit attribute subresource with given uuid, only modifying properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "provider" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource properties to update",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/ProviderAttributeUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "attribute response",
            "schema" : {
              "$ref" : "#/definitions/ProviderAttributeGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "updateProviderAttribute"
      },
      "get" : {
        "summary" : "Fetch attribute subresources by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "provider" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        } ],
        "responses" : {
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "200" : {
            "description" : "attribute response",
            "schema" : {
              "$ref" : "#/definitions/ProviderAttributeGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getProviderAttribute"
      },
      "delete" : {
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "summary" : "Delete or purge resource by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "provider" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "deleteProviderAttribute"
      }
    },
    "/workflow/{parent-uuid}/state" : {
      "get" : {
        "summary" : "Fetch all non-retired state subresources",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "workflow" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "state response",
            "schema" : {
              "$ref" : "#/definitions/WorkflowStateGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getAllProgramWorkflowStates"
      }
    },
    "/encounterrole/{uuid}" : {
      "post" : {
        "summary" : "Edit with given uuid, only modifying properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "encounterrole" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource properties to update",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/EncounterroleUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "encounterrole response",
            "schema" : {
              "$ref" : "#/definitions/EncounterroleGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "updateEncounterRole"
      },
      "get" : {
        "summary" : "Fetch by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "encounterrole" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        } ],
        "responses" : {
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "200" : {
            "description" : "encounterrole response",
            "schema" : {
              "$ref" : "#/definitions/EncounterroleGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getEncounterRole"
      },
      "delete" : {
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "summary" : "Delete or purge resource by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "encounterrole" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "deleteEncounterRole"
      }
    },
    "/role" : {
      "post" : {
        "summary" : "Create with properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "role" ],
        "parameters" : [ {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource to create",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/RoleCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "role response",
            "schema" : {
              "$ref" : "#/definitions/RoleGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "createRole"
      },
      "get" : {
        "summary" : "Fetch all non-retired",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "role" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "role response",
            "schema" : {
              "$ref" : "#/definitions/RoleGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getAllRoles"
      }
    },
    "/personimage" : {
      "post" : {
        "summary" : "Create with properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "personimage" ],
        "parameters" : [ {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource to create",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/PersonimageCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "personimage response",
            "schema" : {
              "$ref" : "#/definitions/PersonimageGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "createPersonImage"
      }
    },
    "/systemsetting/{uuid}" : {
      "post" : {
        "summary" : "Edit with given uuid, only modifying properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "systemsetting" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource properties to update",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/SystemsettingUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "systemsetting response",
            "schema" : {
              "$ref" : "#/definitions/SystemsettingGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "updateSystemSetting"
      },
      "get" : {
        "summary" : "Fetch by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "systemsetting" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        } ],
        "responses" : {
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "200" : {
            "description" : "systemsetting response",
            "schema" : {
              "$ref" : "#/definitions/SystemsettingGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getSystemSetting"
      },
      "delete" : {
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "summary" : "Delete or purge resource by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "systemsetting" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "deleteSystemSetting"
      }
    },
    "/person/{parent-uuid}/address/{uuid}" : {
      "post" : {
        "summary" : "Edit address subresource with given uuid, only modifying properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "person" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource properties to update",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/PersonAddressUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "address response",
            "schema" : {
              "$ref" : "#/definitions/PersonAddressGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "updatePersonAddress"
      },
      "get" : {
        "summary" : "Fetch address subresources by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "person" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        } ],
        "responses" : {
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "200" : {
            "description" : "address response",
            "schema" : {
              "$ref" : "#/definitions/PersonAddressGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getPersonAddress"
      },
      "delete" : {
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "summary" : "Delete or purge resource by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "person" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "deletePersonAddress"
      }
    },
    "/location/{parent-uuid}/attribute" : {
      "post" : {
        "summary" : "Create attribute subresource with properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "location" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource to create",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/LocationAttributeCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "attribute response",
            "schema" : {
              "$ref" : "#/definitions/LocationAttributeGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "createLocationAttribute"
      },
      "get" : {
        "summary" : "Fetch all non-retired attribute subresources",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "location" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "attribute response",
            "schema" : {
              "$ref" : "#/definitions/LocationAttributeGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getAllLocationAttributes"
      }
    },
    "/conceptclass" : {
      "post" : {
        "summary" : "Create with properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "conceptclass" ],
        "parameters" : [ {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource to create",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/ConceptclassCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "conceptclass response",
            "schema" : {
              "$ref" : "#/definitions/ConceptclassGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "createConceptClass"
      },
      "get" : {
        "summary" : "Fetch all non-retired",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "conceptclass" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "conceptclass response",
            "schema" : {
              "$ref" : "#/definitions/ConceptclassGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getAllConceptClasses"
      }
    },
    "/customdatatype/{uuid}" : {
      "get" : {
        "summary" : "Fetch by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "customdatatype" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        } ],
        "responses" : {
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "200" : {
            "description" : "customdatatype response",
            "schema" : {
              "$ref" : "#/definitions/CustomdatatypeGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getCustomDatatype"
      },
      "delete" : {
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "summary" : "Delete or purge resource by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "customdatatype" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "deleteCustomDatatype"
      }
    },
    "/drug" : {
      "post" : {
        "summary" : "Create with properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "drug" ],
        "parameters" : [ {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource to create",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/DrugCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "drug response",
            "schema" : {
              "$ref" : "#/definitions/DrugGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "createBahmniDrug"
      },
      "get" : {
        "description" : "All search parameters are optional",
        "summary" : "Fetch all non-retired drug resources or perform search",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "drug" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        }, {
          "name" : "source",
          "in" : "query",
          "type" : "string"
        }, {
          "name" : "preferredMapTypes",
          "in" : "query",
          "description" : "Must be used with source",
          "type" : "string"
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "type" : "string"
        }, {
          "name" : "locale",
          "in" : "query",
          "description" : "Must be used with q",
          "type" : "string"
        }, {
          "name" : "code",
          "in" : "query",
          "description" : "Must be used with source",
          "type" : "string"
        }, {
          "name" : "exactLocale",
          "in" : "query",
          "description" : "Must be used with q",
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "drug response",
            "schema" : {
              "$ref" : "#/definitions/DrugGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getAllBahmniDrugs"
      }
    },
    "/visitattributetype/{uuid}" : {
      "post" : {
        "summary" : "Edit with given uuid, only modifying properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "visitattributetype" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource properties to update",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/VisitattributetypeUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "visitattributetype response",
            "schema" : {
              "$ref" : "#/definitions/VisitattributetypeGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "updateVisitAttributeType"
      },
      "get" : {
        "summary" : "Fetch by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "visitattributetype" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        } ],
        "responses" : {
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "200" : {
            "description" : "visitattributetype response",
            "schema" : {
              "$ref" : "#/definitions/VisitattributetypeGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getVisitAttributeType"
      },
      "delete" : {
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "summary" : "Delete or purge resource by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "visitattributetype" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "deleteVisitAttributeType"
      }
    },
    "/patient/{parent-uuid}/identifier/{uuid}" : {
      "post" : {
        "summary" : "Edit identifier subresource with given uuid, only modifying properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "patient" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource properties to update",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/PatientIdentifierUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "identifier response",
            "schema" : {
              "$ref" : "#/definitions/PatientIdentifierGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "updatePatientIdentifier"
      },
      "get" : {
        "summary" : "Fetch identifier subresources by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "patient" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        } ],
        "responses" : {
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "200" : {
            "description" : "identifier response",
            "schema" : {
              "$ref" : "#/definitions/PatientIdentifierGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getPatientIdentifier"
      },
      "delete" : {
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "summary" : "Delete or purge resource by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "patient" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "deletePatientIdentifier"
      }
    },
    "/providerattributetype" : {
      "post" : {
        "summary" : "Create with properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "providerattributetype" ],
        "parameters" : [ {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource to create",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/ProviderattributetypeCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "providerattributetype response",
            "schema" : {
              "$ref" : "#/definitions/ProviderattributetypeGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "createProviderAttributeType"
      },
      "get" : {
        "summary" : "Fetch all non-retired",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "providerattributetype" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "providerattributetype response",
            "schema" : {
              "$ref" : "#/definitions/ProviderattributetypeGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getAllProviderAttributeTypes"
      }
    },
    "/locationattributetype/{uuid}" : {
      "post" : {
        "summary" : "Edit with given uuid, only modifying properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "locationattributetype" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource properties to update",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/LocationattributetypeUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "locationattributetype response",
            "schema" : {
              "$ref" : "#/definitions/LocationattributetypeGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "updateLocationAttributeType"
      },
      "get" : {
        "summary" : "Fetch by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "locationattributetype" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        } ],
        "responses" : {
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "200" : {
            "description" : "locationattributetype response",
            "schema" : {
              "$ref" : "#/definitions/LocationattributetypeGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getLocationAttributeType"
      },
      "delete" : {
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "summary" : "Delete or purge resource by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "locationattributetype" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "deleteLocationAttributeType"
      }
    },
    "/visittype" : {
      "post" : {
        "summary" : "Create with properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "visittype" ],
        "parameters" : [ {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource to create",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/VisittypeCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "visittype response",
            "schema" : {
              "$ref" : "#/definitions/VisittypeGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "createVisitType"
      },
      "get" : {
        "summary" : "Fetch all non-retired",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "visittype" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "visittype response",
            "schema" : {
              "$ref" : "#/definitions/VisittypeGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getAllVisitTypes"
      }
    },
    "/obs" : {
      "post" : {
        "summary" : "Create with properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "obs" ],
        "parameters" : [ {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource to create",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/ObsCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "obs response",
            "schema" : {
              "$ref" : "#/definitions/ObsGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "createBahmniObs"
      },
      "get" : {
        "description" : "At least one search parameter must be specified",
        "summary" : "Search for obs",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "obs" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        }, {
          "name" : "concept",
          "in" : "query",
          "type" : "string"
        }, {
          "name" : "patient",
          "in" : "query",
          "type" : "string"
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "type" : "string"
        }, {
          "name" : "numberOfVisits",
          "in" : "query",
          "type" : "string"
        }, {
          "name" : "conceptNames",
          "in" : "query",
          "description" : "Must be used with patient or numberOfVisits",
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "obs response",
            "schema" : { }
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getAllBahmniObses"
      }
    },
    "/bed" : {
      "get" : {
        "description" : "At least one search parameter must be specified",
        "summary" : "Search for bed",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "bed" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "bed response",
            "schema" : { }
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getAllBeds"
      }
    },
    "/problem" : {
      "post" : {
        "summary" : "Create with properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "problem" ],
        "parameters" : [ {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource to create",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/ProblemCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "problem response",
            "schema" : {
              "$ref" : "#/definitions/ProblemGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "createProblem"
      }
    },
    "/drug/{parent-uuid}/ingredient" : {
      "post" : {
        "summary" : "Create ingredient subresource with properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "drug" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource to create",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/DrugIngredientCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "ingredient response",
            "schema" : {
              "$ref" : "#/definitions/DrugIngredientGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "createDrugIngredient"
      },
      "get" : {
        "summary" : "Fetch all non-retired ingredient subresources",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "drug" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "ingredient response",
            "schema" : {
              "$ref" : "#/definitions/DrugIngredientGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getAllDrugIngredients"
      }
    },
    "/location/{uuid}" : {
      "post" : {
        "summary" : "Edit with given uuid, only modifying properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "location" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource properties to update",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/LocationUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "location response",
            "schema" : {
              "$ref" : "#/definitions/LocationGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "updateLocation"
      },
      "get" : {
        "summary" : "Fetch by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "location" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        } ],
        "responses" : {
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "200" : {
            "description" : "location response",
            "schema" : {
              "$ref" : "#/definitions/LocationGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getLocation"
      },
      "delete" : {
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "summary" : "Delete or purge resource by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "location" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "deleteLocation"
      }
    },
    "/user" : {
      "post" : {
        "summary" : "Create with properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "user" ],
        "parameters" : [ {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource to create",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/UserCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "user response",
            "schema" : {
              "$ref" : "#/definitions/UserGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "createUser"
      },
      "get" : {
        "description" : "All search parameters are optional",
        "summary" : "Fetch all non-retired user resources or perform search",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "user" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        }, {
          "name" : "username",
          "in" : "query",
          "type" : "string"
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "user response",
            "schema" : {
              "$ref" : "#/definitions/UserGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getAllUsers"
      }
    },
    "/hl7" : {
      "post" : {
        "summary" : "Create with properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "hl7" ],
        "parameters" : [ {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource to create",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/Hl7Create"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "hl7 response",
            "schema" : {
              "$ref" : "#/definitions/Hl7Get"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "createHL7Message"
      }
    },
    "/person/{parent-uuid}/name" : {
      "post" : {
        "summary" : "Create name subresource with properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "person" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource to create",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/PersonNameCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "name response",
            "schema" : {
              "$ref" : "#/definitions/PersonNameGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "createPersonName"
      },
      "get" : {
        "summary" : "Fetch all non-retired name subresources",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "person" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "name response",
            "schema" : {
              "$ref" : "#/definitions/PersonNameGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getAllPersonNames"
      }
    },
    "/cohort" : {
      "post" : {
        "summary" : "Create with properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "cohort" ],
        "parameters" : [ {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource to create",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/CohortCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "cohort response",
            "schema" : {
              "$ref" : "#/definitions/CohortGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "createCohort"
      },
      "get" : {
        "summary" : "Fetch all non-retired",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "cohort" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "cohort response",
            "schema" : {
              "$ref" : "#/definitions/CohortGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getAllCohorts"
      }
    },
    "/beds" : {
      "get" : {
        "description" : "At least one search parameter must be specified",
        "summary" : "Search for beds",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "beds" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "type" : "string"
        }, {
          "name" : "visitUuid",
          "in" : "query",
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "beds response",
            "schema" : { }
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getAllBedDetailses"
      }
    },
    "/bed/{uuid}" : {
      "get" : {
        "summary" : "Fetch by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "bed" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        } ],
        "responses" : {
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "200" : {
            "description" : "bed response",
            "schema" : {
              "$ref" : "#/definitions/BedGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getBed"
      },
      "delete" : {
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "summary" : "Delete or purge resource by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "bed" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "deleteBed"
      }
    },
    "/bedPatientAssignment" : { },
    "/patientprofile" : {
      "post" : {
        "summary" : "Create with properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "patientprofile" ],
        "parameters" : [ {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource to create",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/PatientprofileCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "patientprofile response",
            "schema" : {
              "$ref" : "#/definitions/PatientprofileGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "createPatientProfile"
      }
    },
    "/fieldtype/{uuid}" : {
      "post" : {
        "summary" : "Edit with given uuid, only modifying properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "fieldtype" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource properties to update",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/FieldtypeUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "fieldtype response",
            "schema" : {
              "$ref" : "#/definitions/FieldtypeGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "updateFieldType"
      },
      "get" : {
        "summary" : "Fetch by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "fieldtype" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        } ],
        "responses" : {
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "200" : {
            "description" : "fieldtype response",
            "schema" : {
              "$ref" : "#/definitions/FieldtypeGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getFieldType"
      },
      "delete" : {
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "summary" : "Delete or purge resource by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "fieldtype" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "deleteFieldType"
      }
    },
    "/order/{uuid}" : {
      "get" : {
        "summary" : "Fetch by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "order" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        } ],
        "responses" : {
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "200" : {
            "description" : "order response",
            "schema" : {
              "$ref" : "#/definitions/OrderGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getBahmniOrder"
      },
      "delete" : {
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "summary" : "Delete or purge resource by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "order" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "deleteBahmniOrder"
      }
    },
    "/obs/{uuid}" : {
      "post" : {
        "summary" : "Edit with given uuid, only modifying properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "obs" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource properties to update",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/ObsUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "obs response",
            "schema" : {
              "$ref" : "#/definitions/ObsGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "updateBahmniObs"
      },
      "get" : {
        "summary" : "Fetch by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "obs" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        } ],
        "responses" : {
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "200" : {
            "description" : "obs response",
            "schema" : {
              "$ref" : "#/definitions/ObsGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getBahmniObs"
      },
      "delete" : {
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "summary" : "Delete or purge resource by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "obs" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "deleteBahmniObs"
      }
    },
    "/conceptsearch/{uuid}" : { },
    "/locationtag/{uuid}" : {
      "post" : {
        "summary" : "Edit with given uuid, only modifying properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "locationtag" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource properties to update",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/LocationtagUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "locationtag response",
            "schema" : {
              "$ref" : "#/definitions/LocationtagGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "updateLocationTag"
      },
      "delete" : {
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "summary" : "Delete or purge resource by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "locationtag" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "deleteLocationTag"
      }
    },
    "/allergy" : {
      "post" : {
        "summary" : "Create with properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "allergy" ],
        "parameters" : [ {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource to create",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/AllergyCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "allergy response",
            "schema" : {
              "$ref" : "#/definitions/AllergyGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "createAllergy"
      }
    },
    "/workflow" : {
      "post" : {
        "summary" : "Create with properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "workflow" ],
        "parameters" : [ {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource to create",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/WorkflowCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "workflow response",
            "schema" : {
              "$ref" : "#/definitions/WorkflowGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "createProgramWorkflow"
      }
    },
    "/concept" : {
      "post" : {
        "summary" : "Create with properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "concept" ],
        "parameters" : [ {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource to create",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/ConceptCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "concept response",
            "schema" : {
              "$ref" : "#/definitions/ConceptGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "createBahmniConcept"
      },
      "get" : {
        "description" : "All search parameters are optional",
        "summary" : "Fetch all non-retired concept resources or perform search",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "concept" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        }, {
          "name" : "source",
          "in" : "query",
          "type" : "string"
        }, {
          "name" : "term",
          "in" : "query",
          "type" : "string"
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "type" : "string"
        }, {
          "name" : "name",
          "in" : "query",
          "type" : "string"
        }, {
          "name" : "code",
          "in" : "query",
          "description" : "Must be used with source",
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "concept response",
            "schema" : {
              "$ref" : "#/definitions/ConceptGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getAllBahmniConcepts"
      }
    },
    "/workflow/{uuid}" : {
      "post" : {
        "summary" : "Edit with given uuid, only modifying properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "workflow" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource properties to update",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/WorkflowUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "workflow response",
            "schema" : {
              "$ref" : "#/definitions/WorkflowGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "updateProgramWorkflow"
      },
      "get" : {
        "summary" : "Fetch by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "workflow" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        } ],
        "responses" : {
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "200" : {
            "description" : "workflow response",
            "schema" : {
              "$ref" : "#/definitions/WorkflowGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getProgramWorkflow"
      },
      "delete" : {
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "summary" : "Delete or purge resource by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "workflow" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "deleteProgramWorkflow"
      }
    },
    "/providerattributetype/{uuid}" : {
      "post" : {
        "summary" : "Edit with given uuid, only modifying properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "providerattributetype" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource properties to update",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/ProviderattributetypeUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "providerattributetype response",
            "schema" : {
              "$ref" : "#/definitions/ProviderattributetypeGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "updateProviderAttributeType"
      },
      "get" : {
        "summary" : "Fetch by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "providerattributetype" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        } ],
        "responses" : {
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "200" : {
            "description" : "providerattributetype response",
            "schema" : {
              "$ref" : "#/definitions/ProviderattributetypeGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getProviderAttributeType"
      },
      "delete" : {
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "summary" : "Delete or purge resource by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "providerattributetype" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "deleteProviderAttributeType"
      }
    },
    "/hl7source" : {
      "post" : {
        "summary" : "Create with properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "hl7source" ],
        "parameters" : [ {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource to create",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/Hl7sourceCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "hl7source response",
            "schema" : {
              "$ref" : "#/definitions/Hl7sourceGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "createHL7Source"
      }
    },
    "/locationtag" : {
      "post" : {
        "summary" : "Create with properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "locationtag" ],
        "parameters" : [ {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource to create",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/LocationtagCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "locationtag response",
            "schema" : {
              "$ref" : "#/definitions/LocationtagGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "createLocationTag"
      }
    },
    "/admissionLocation/{uuid}" : {
      "get" : {
        "summary" : "Fetch by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "admissionLocation" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        } ],
        "responses" : {
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "200" : {
            "description" : "admissionLocation response",
            "schema" : {
              "$ref" : "#/definitions/AdmissionLocationGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getAdmissionLocation"
      },
      "delete" : {
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "summary" : "Delete or purge resource by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "admissionLocation" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "deleteAdmissionLocation"
      }
    },
    "/caresetting/{uuid}" : {
      "get" : {
        "summary" : "Fetch by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "caresetting" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        } ],
        "responses" : {
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "200" : {
            "description" : "caresetting response",
            "schema" : {
              "$ref" : "#/definitions/CaresettingGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getCareSetting"
      },
      "delete" : {
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "summary" : "Delete or purge resource by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "caresetting" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "deleteCareSetting"
      }
    },
    "/ordertype" : {
      "post" : {
        "summary" : "Create with properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "ordertype" ],
        "parameters" : [ {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource to create",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/OrdertypeCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "ordertype response",
            "schema" : {
              "$ref" : "#/definitions/OrdertypeGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "createOrderType"
      },
      "get" : {
        "summary" : "Fetch all non-retired",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "ordertype" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "ordertype response",
            "schema" : {
              "$ref" : "#/definitions/OrdertypeGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getAllOrderTypes"
      }
    },
    "/concept/{parent-uuid}/description/{uuid}" : {
      "post" : {
        "summary" : "Edit description subresource with given uuid, only modifying properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "concept" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource properties to update",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/ConceptDescriptionUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "description response",
            "schema" : {
              "$ref" : "#/definitions/ConceptDescriptionGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "updateConceptDescription"
      },
      "get" : {
        "summary" : "Fetch description subresources by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "concept" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        } ],
        "responses" : {
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "200" : {
            "description" : "description response",
            "schema" : {
              "$ref" : "#/definitions/ConceptDescriptionGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getConceptDescription"
      },
      "delete" : {
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "summary" : "Delete or purge resource by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "concept" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "deleteConceptDescription"
      }
    },
    "/relationship" : {
      "post" : {
        "summary" : "Create with properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "relationship" ],
        "parameters" : [ {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource to create",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/RelationshipCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "relationship response",
            "schema" : {
              "$ref" : "#/definitions/RelationshipGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "createRelationship"
      },
      "get" : {
        "description" : "All search parameters are optional",
        "summary" : "Fetch all non-retired relationship resources or perform search",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "relationship" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        }, {
          "name" : "relatedPerson",
          "in" : "query",
          "type" : "string"
        }, {
          "name" : "person",
          "in" : "query",
          "type" : "string"
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "type" : "string"
        }, {
          "name" : "relation",
          "in" : "query",
          "type" : "string"
        }, {
          "name" : "personA",
          "in" : "query",
          "type" : "string"
        }, {
          "name" : "personB",
          "in" : "query",
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "relationship response",
            "schema" : {
              "$ref" : "#/definitions/RelationshipGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getAllRelationships"
      }
    },
    "/form" : {
      "post" : {
        "summary" : "Create with properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "form" ],
        "parameters" : [ {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource to create",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/FormCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "form response",
            "schema" : {
              "$ref" : "#/definitions/FormGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "createForm"
      },
      "get" : {
        "summary" : "Fetch all non-retired",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "form" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "form response",
            "schema" : {
              "$ref" : "#/definitions/FormGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getAllForms"
      }
    },
    "/person/{parent-uuid}/address" : {
      "post" : {
        "summary" : "Create address subresource with properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "person" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource to create",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/PersonAddressCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "address response",
            "schema" : {
              "$ref" : "#/definitions/PersonAddressGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "createPersonAddress"
      },
      "get" : {
        "summary" : "Fetch all non-retired address subresources",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "person" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "address response",
            "schema" : {
              "$ref" : "#/definitions/PersonAddressGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getAllPersonAddresses"
      }
    },
    "/systemsetting" : {
      "post" : {
        "summary" : "Create with properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "systemsetting" ],
        "parameters" : [ {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource to create",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/SystemsettingCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "systemsetting response",
            "schema" : {
              "$ref" : "#/definitions/SystemsettingGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "createSystemSetting"
      },
      "get" : {
        "summary" : "Fetch all non-retired",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "systemsetting" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "systemsetting response",
            "schema" : {
              "$ref" : "#/definitions/SystemsettingGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getAllSystemSettings"
      }
    },
    "/person/{parent-uuid}/attribute/{uuid}" : {
      "post" : {
        "summary" : "Edit attribute subresource with given uuid, only modifying properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "person" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource properties to update",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/PersonAttributeUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "attribute response",
            "schema" : {
              "$ref" : "#/definitions/PersonAttributeGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "updatePersonAttribute"
      },
      "get" : {
        "summary" : "Fetch attribute subresources by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "person" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        } ],
        "responses" : {
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "200" : {
            "description" : "attribute response",
            "schema" : {
              "$ref" : "#/definitions/PersonAttributeGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getPersonAttribute"
      },
      "delete" : {
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "summary" : "Delete or purge resource by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "person" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "deletePersonAttribute"
      }
    },
    "/conceptdatatype/{uuid}" : {
      "get" : {
        "summary" : "Fetch by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "conceptdatatype" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        } ],
        "responses" : {
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "200" : {
            "description" : "conceptdatatype response",
            "schema" : {
              "$ref" : "#/definitions/ConceptdatatypeGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getConceptDatatype"
      },
      "delete" : {
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "summary" : "Delete or purge resource by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "conceptdatatype" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "deleteConceptDatatype"
      }
    },
    "/bahmniorderset" : {
      "post" : {
        "summary" : "Create with properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "bahmniorderset" ],
        "parameters" : [ {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource to create",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/BahmniordersetCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "bahmniorderset response",
            "schema" : {
              "$ref" : "#/definitions/BahmniordersetGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "createBahmniOrderSet"
      },
      "get" : {
        "description" : "All search parameters are optional",
        "summary" : "Fetch all non-retired bahmniorderset resources or perform search",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "bahmniorderset" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "bahmniorderset response",
            "schema" : {
              "$ref" : "#/definitions/BahmniordersetGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getAllBahmniOrderSets"
      }
    },
    "/visitattributetype" : {
      "post" : {
        "summary" : "Create with properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "visitattributetype" ],
        "parameters" : [ {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource to create",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/VisitattributetypeCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "visitattributetype response",
            "schema" : {
              "$ref" : "#/definitions/VisitattributetypeGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "createVisitAttributeType"
      },
      "get" : {
        "summary" : "Fetch all non-retired",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "visitattributetype" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "visitattributetype response",
            "schema" : {
              "$ref" : "#/definitions/VisitattributetypeGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getAllVisitAttributeTypes"
      }
    },
    "/customdatatype" : {
      "get" : {
        "summary" : "Fetch all non-retired",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "customdatatype" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "customdatatype response",
            "schema" : {
              "$ref" : "#/definitions/CustomdatatypeGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getAllCustomDatatypes"
      }
    },
    "/personattributetype" : {
      "post" : {
        "summary" : "Create with properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "personattributetype" ],
        "parameters" : [ {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource to create",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/PersonattributetypeCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "personattributetype response",
            "schema" : {
              "$ref" : "#/definitions/PersonattributetypeGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "createPersonAttributeType"
      },
      "get" : {
        "summary" : "Fetch all non-retired",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "personattributetype" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "personattributetype response",
            "schema" : {
              "$ref" : "#/definitions/PersonattributetypeGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getAllPersonAttributeTypes"
      }
    },
    "/conceptreferencetermmap" : {
      "post" : {
        "summary" : "Create with properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "conceptreferencetermmap" ],
        "parameters" : [ {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource to create",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/ConceptreferencetermmapCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "conceptreferencetermmap response",
            "schema" : {
              "$ref" : "#/definitions/ConceptreferencetermmapGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "createConceptReferenceTermMap"
      },
      "get" : {
        "description" : "At least one search parameter must be specified",
        "summary" : "Search for conceptreferencetermmap",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "conceptreferencetermmap" ],
        "parameters" : [ {
          "name" : "to",
          "in" : "query",
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        }, {
          "name" : "maps",
          "in" : "query",
          "type" : "string"
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "type" : "string"
        }, {
          "name" : "termA",
          "in" : "query",
          "type" : "string"
        }, {
          "name" : "termB",
          "in" : "query",
          "type" : "string"
        }, {
          "name" : "maptype",
          "in" : "query",
          "description" : "Must be used with termB",
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "conceptreferencetermmap response",
            "schema" : { }
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getAllConceptReferenceTermMaps"
      }
    },
    "/encountertype/{uuid}" : {
      "post" : {
        "summary" : "Edit with given uuid, only modifying properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "encountertype" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource properties to update",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/EncountertypeUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "encountertype response",
            "schema" : {
              "$ref" : "#/definitions/EncountertypeGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "updateEncounterType"
      },
      "get" : {
        "summary" : "Fetch by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "encountertype" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        } ],
        "responses" : {
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "200" : {
            "description" : "encountertype response",
            "schema" : {
              "$ref" : "#/definitions/EncountertypeGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getEncounterType"
      },
      "delete" : {
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "summary" : "Delete or purge resource by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "encountertype" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "deleteEncounterType"
      }
    },
    "/concept/{parent-uuid}/description" : {
      "post" : {
        "summary" : "Create description subresource with properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "concept" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource to create",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/ConceptDescriptionCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "description response",
            "schema" : {
              "$ref" : "#/definitions/ConceptDescriptionGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "createConceptDescription"
      },
      "get" : {
        "summary" : "Fetch all non-retired description subresources",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "concept" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "description response",
            "schema" : {
              "$ref" : "#/definitions/ConceptDescriptionGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getAllConceptDescriptions"
      }
    },
    "/personattributetype/{uuid}" : {
      "post" : {
        "summary" : "Edit with given uuid, only modifying properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "personattributetype" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource properties to update",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/PersonattributetypeUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "personattributetype response",
            "schema" : {
              "$ref" : "#/definitions/PersonattributetypeGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "updatePersonAttributeType"
      },
      "get" : {
        "summary" : "Fetch by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "personattributetype" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        } ],
        "responses" : {
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "200" : {
            "description" : "personattributetype response",
            "schema" : {
              "$ref" : "#/definitions/PersonattributetypeGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getPersonAttributeType"
      },
      "delete" : {
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "summary" : "Delete or purge resource by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "personattributetype" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "deletePersonAttributeType"
      }
    },
    "/provider" : {
      "post" : {
        "summary" : "Create with properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "provider" ],
        "parameters" : [ {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource to create",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/ProviderCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "provider response",
            "schema" : {
              "$ref" : "#/definitions/ProviderGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "createProvider"
      },
      "get" : {
        "description" : "All search parameters are optional",
        "summary" : "Fetch all non-retired provider resources or perform search",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "provider" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "type" : "string"
        }, {
          "name" : "user",
          "in" : "query",
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "provider response",
            "schema" : {
              "$ref" : "#/definitions/ProviderGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getAllProviders"
      }
    },
    "/visit/{parent-uuid}/attribute/{uuid}" : {
      "post" : {
        "summary" : "Edit attribute subresource with given uuid, only modifying properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "visit" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource properties to update",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/VisitAttributeUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "attribute response",
            "schema" : {
              "$ref" : "#/definitions/VisitAttributeGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "updateVisitAttribute"
      },
      "get" : {
        "summary" : "Fetch attribute subresources by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "visit" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        } ],
        "responses" : {
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "200" : {
            "description" : "attribute response",
            "schema" : {
              "$ref" : "#/definitions/VisitAttributeGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getVisitAttribute"
      },
      "delete" : {
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "summary" : "Delete or purge resource by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "visit" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "deleteVisitAttribute"
      }
    },
    "/programattributetype/{uuid}" : {
      "post" : {
        "summary" : "Edit with given uuid, only modifying properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "programattributetype" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource properties to update",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/ProgramattributetypeUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "programattributetype response",
            "schema" : {
              "$ref" : "#/definitions/ProgramattributetypeGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "updateProgramAttributeType"
      },
      "get" : {
        "summary" : "Fetch by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "programattributetype" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        } ],
        "responses" : {
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "200" : {
            "description" : "programattributetype response",
            "schema" : {
              "$ref" : "#/definitions/ProgramattributetypeGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getProgramAttributeType"
      },
      "delete" : {
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "summary" : "Delete or purge resource by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "programattributetype" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "deleteProgramAttributeType"
      }
    },
    "/entitymapping" : {
      "get" : {
        "description" : "At least one search parameter must be specified",
        "summary" : "Search for entitymapping",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "entitymapping" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        }, {
          "name" : "entityUuid",
          "in" : "query",
          "description" : "Must be used with mappingType",
          "type" : "string"
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "type" : "string"
        }, {
          "name" : "mappingType",
          "in" : "query",
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "entitymapping response",
            "schema" : { }
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getAllEntityMappings"
      }
    },
    "/field/{parent-uuid}/answer/{uuid}" : {
      "post" : {
        "summary" : "Edit answer subresource with given uuid, only modifying properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "field" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource properties to update",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/FieldAnswerUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "answer response",
            "schema" : {
              "$ref" : "#/definitions/FieldAnswerGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "updateFieldAnswer"
      },
      "get" : {
        "summary" : "Fetch answer subresources by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "field" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        } ],
        "responses" : {
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "200" : {
            "description" : "answer response",
            "schema" : {
              "$ref" : "#/definitions/FieldAnswerGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getFieldAnswer"
      },
      "delete" : {
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "summary" : "Delete or purge resource by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "field" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "deleteFieldAnswer"
      }
    },
    "/relationshiptype/{uuid}" : {
      "post" : {
        "summary" : "Edit with given uuid, only modifying properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "relationshiptype" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource properties to update",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/RelationshiptypeUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "relationshiptype response",
            "schema" : {
              "$ref" : "#/definitions/RelationshiptypeGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "updateRelationShipType"
      },
      "get" : {
        "summary" : "Fetch by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "relationshiptype" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        } ],
        "responses" : {
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "200" : {
            "description" : "relationshiptype response",
            "schema" : {
              "$ref" : "#/definitions/RelationshiptypeGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getRelationShipType"
      },
      "delete" : {
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "summary" : "Delete or purge resource by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "relationshiptype" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "deleteRelationShipType"
      }
    },
    "/admissionLocation" : {
      "get" : {
        "summary" : "Fetch all non-retired",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "admissionLocation" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "admissionLocation response",
            "schema" : {
              "$ref" : "#/definitions/AdmissionLocationGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getAllAdmissionLocations"
      }
    },
    "/conceptstopword/{uuid}" : {
      "post" : {
        "summary" : "Edit with given uuid, only modifying properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "conceptstopword" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource properties to update",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/ConceptstopwordUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "conceptstopword response",
            "schema" : {
              "$ref" : "#/definitions/ConceptstopwordGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "updateConceptStopword"
      },
      "get" : {
        "summary" : "Fetch by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "conceptstopword" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        } ],
        "responses" : {
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "200" : {
            "description" : "conceptstopword response",
            "schema" : {
              "$ref" : "#/definitions/ConceptstopwordGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getConceptStopword"
      },
      "delete" : {
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "summary" : "Delete or purge resource by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "conceptstopword" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "deleteConceptStopword"
      }
    },
    "/program/{uuid}" : {
      "post" : {
        "summary" : "Edit with given uuid, only modifying properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "program" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource properties to update",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/ProgramUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "program response",
            "schema" : {
              "$ref" : "#/definitions/ProgramGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "updateProgram"
      },
      "get" : {
        "summary" : "Fetch by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "program" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        } ],
        "responses" : {
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "200" : {
            "description" : "program response",
            "schema" : {
              "$ref" : "#/definitions/ProgramGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getProgram"
      },
      "delete" : {
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "summary" : "Delete or purge resource by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "program" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "deleteProgram"
      }
    },
    "/concept/{parent-uuid}/mapping" : {
      "post" : {
        "summary" : "Create mapping subresource with properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "concept" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource to create",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/ConceptMappingCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "mapping response",
            "schema" : {
              "$ref" : "#/definitions/ConceptMappingGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "createConceptMap"
      },
      "get" : {
        "description" : "All search parameters are optional",
        "summary" : "Fetch all non-retired mapping resources or perform search",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "concept" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "mapping response",
            "schema" : {
              "$ref" : "#/definitions/ConceptMappingGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getAllConceptMaps"
      }
    },
    "/allergy/{uuid}" : {
      "post" : {
        "summary" : "Edit with given uuid, only modifying properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "allergy" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource properties to update",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/AllergyUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "allergy response",
            "schema" : {
              "$ref" : "#/definitions/AllergyGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "updateAllergy"
      },
      "get" : {
        "summary" : "Fetch by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "allergy" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        } ],
        "responses" : {
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "200" : {
            "description" : "allergy response",
            "schema" : {
              "$ref" : "#/definitions/AllergyGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getAllergy"
      },
      "delete" : {
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "summary" : "Delete or purge resource by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "allergy" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "deleteAllergy"
      }
    },
    "/person/{uuid}" : {
      "post" : {
        "summary" : "Edit with given uuid, only modifying properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "person" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource properties to update",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/PersonUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "person response",
            "schema" : {
              "$ref" : "#/definitions/PersonGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "updatePerson"
      },
      "get" : {
        "summary" : "Fetch by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "person" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        } ],
        "responses" : {
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "200" : {
            "description" : "person response",
            "schema" : {
              "$ref" : "#/definitions/PersonGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getPerson"
      },
      "delete" : {
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "summary" : "Delete or purge resource by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "person" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "deletePerson"
      }
    },
    "/encounter/{parent-uuid}/encounterprovider/{uuid}" : {
      "post" : {
        "summary" : "Edit encounterprovider subresource with given uuid, only modifying properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "encounter" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource properties to update",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/EncounterEncounterproviderUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "encounterprovider response",
            "schema" : {
              "$ref" : "#/definitions/EncounterEncounterproviderGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "updateEncounterProvider"
      },
      "get" : {
        "summary" : "Fetch encounterprovider subresources by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "encounter" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        } ],
        "responses" : {
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "200" : {
            "description" : "encounterprovider response",
            "schema" : {
              "$ref" : "#/definitions/EncounterEncounterproviderGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getEncounterProvider"
      },
      "delete" : {
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "summary" : "Delete or purge resource by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "encounter" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "deleteEncounterProvider"
      }
    },
    "/patient" : {
      "post" : {
        "summary" : "Create with properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "patient" ],
        "parameters" : [ {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource to create",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/PatientCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "patient response",
            "schema" : {
              "$ref" : "#/definitions/PatientGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "createPatient"
      },
      "get" : {
        "description" : "At least one search parameter must be specified",
        "summary" : "Search for patient",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "patient" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "type" : "string"
        }, {
          "name" : "lastviewed",
          "in" : "query",
          "type" : "string"
        }, {
          "name" : "identifier",
          "in" : "query",
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "patient response",
            "schema" : { }
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getAllPatients"
      }
    },
    "/beds/{uuid}" : {
      "get" : {
        "summary" : "Fetch by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "beds" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        } ],
        "responses" : {
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "200" : {
            "description" : "beds response",
            "schema" : {
              "$ref" : "#/definitions/BedsGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getBedDetails"
      },
      "delete" : {
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "summary" : "Delete or purge resource by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "beds" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "deleteBedDetails"
      }
    },
    "/user/{uuid}" : {
      "post" : {
        "summary" : "Edit with given uuid, only modifying properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "user" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource properties to update",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/UserUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "user response",
            "schema" : {
              "$ref" : "#/definitions/UserGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "updateUser"
      },
      "get" : {
        "summary" : "Fetch by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "user" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        } ],
        "responses" : {
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "200" : {
            "description" : "user response",
            "schema" : {
              "$ref" : "#/definitions/UserGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getUser"
      },
      "delete" : {
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "summary" : "Delete or purge resource by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "user" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "deleteUser"
      }
    },
    "/conceptstopword" : {
      "post" : {
        "summary" : "Create with properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "conceptstopword" ],
        "parameters" : [ {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource to create",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/ConceptstopwordCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "conceptstopword response",
            "schema" : {
              "$ref" : "#/definitions/ConceptstopwordGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "createConceptStopword"
      },
      "get" : {
        "summary" : "Fetch all non-retired",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "conceptstopword" ],
        "parameters" : [ {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "conceptstopword response",
            "schema" : {
              "$ref" : "#/definitions/ConceptstopwordGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getAllConceptStopwords"
      }
    },
    "/programenrollment/{uuid}" : {
      "post" : {
        "summary" : "Edit with given uuid, only modifying properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "programenrollment" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid of resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource properties to update",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/ProgramenrollmentUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "programenrollment response",
            "schema" : {
              "$ref" : "#/definitions/ProgramenrollmentGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "updateProgramEnrollment"
      },
      "get" : {
        "summary" : "Fetch by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "programenrollment" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to filter by",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        } ],
        "responses" : {
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "200" : {
            "description" : "programenrollment response",
            "schema" : {
              "$ref" : "#/definitions/ProgramenrollmentGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getProgramEnrollment"
      },
      "delete" : {
        "description" : "The resource will be voided/retired unless purge = 'true'",
        "summary" : "Delete or purge resource by uuid",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "programenrollment" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "uuid to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "purge",
          "in" : "query",
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete successful"
          },
          "404" : {
            "description" : "Resource with given uuid doesn't exist"
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "deleteProgramEnrollment"
      }
    },
    "/cohort/{parent-uuid}/member" : {
      "post" : {
        "summary" : "Create member subresource with properties in request",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "cohort" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "resource",
          "in" : "body",
          "description" : "Resource to create",
          "required" : true,
          "type" : "string",
          "schema" : {
            "$ref" : "#/definitions/CohortMemberCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "member response",
            "schema" : {
              "$ref" : "#/definitions/CohortMemberGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "createCohortMember"
      },
      "get" : {
        "summary" : "Fetch all non-retired member subresources",
        "produces" : [ "application/json", "application/xml" ],
        "tags" : [ "cohort" ],
        "parameters" : [ {
          "name" : "parent-uuid",
          "in" : "path",
          "description" : "parent resource uuid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "v",
          "in" : "query",
          "description" : "The representation to return (ref, default, full or custom)",
          "type" : "string"
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "The search query",
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of results to return",
          "type" : "integer"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The offset at which to start",
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "member response",
            "schema" : {
              "$ref" : "#/definitions/CohortMemberGet"
            }
          },
          "401" : {
            "description" : "User not logged in"
          }
        },
        "isSearchHandler" : "false",
        "operationId" : "getAllCohortMembers"
      }
    }
  },
  "definitions" : {
    "FieldtypeCreate" : {
      "type" : "object",
      "required" : [ "name" ],
      "properties" : {
        "description" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "fieldtype"
      }
    },
    "PrivilegeUpdate" : {
      "type" : "object",
      
      "properties" : {
        "description" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "privilege"
      }
    },
    "BahmniprogramenrollmentUpdate" : {
      "type" : "object",
      "required" : [ "dateEnrolled" ],
      "properties" : {
        "location" : {
          "type" : "string"
        },
        "voided" : {
          "type" : "string"
        },
        "states" : {
          "type" : "string"
        },
        "attributes" : {
          "type" : "string"
        },
        "dateEnrolled" : {
          "type" : "string"
        },
        "voidReason" : {
          "type" : "string"
        },
        "outcome" : {
          "type" : "string"
        },
        "dateCompleted" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "bahmniprogramenrollment"
      }
    },
    "PersonAttributeCreate" : {
      "type" : "object",
      "required" : [ "attributeType" ],
      "properties" : {
        "hydratedObject" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        },
        "attributeType" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "personattribute"
      }
    },
    "PersonimageGet" : {
      "type" : "object",
      
      "properties" : { },
      "xml" : {
        "name" : "personimage"
      }
    },
    "EncountertypeGet" : {
      "type" : "object",
      
      "properties" : {
        "description" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "retired" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string"
        },
        "auditInfo" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "encountertype"
      }
    },
    "LocationtagUpdate" : {
      "type" : "object",
      "required" : [ "name" ],
      "properties" : {
        "retireReason" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "retired" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "locationtag"
      }
    },
    "AllergyCreate" : {
      "type" : "object",
      "required" : [ "person", "startDate", "allergyType", "allergen" ],
      "properties" : {
        "reaction" : {
          "type" : "string"
        },
        "startDate" : {
          "type" : "string"
        },
        "allergen" : {
          "type" : "string"
        },
        "person" : {
          "type" : "string"
        },
        "stopObs" : {
          "type" : "string"
        },
        "startObs" : {
          "type" : "string"
        },
        "allergyType" : {
          "type" : "string"
        },
        "severity" : {
          "type" : "string"
        },
        "comments" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "allergy"
      }
    },
    "EncounterUpdate" : {
      "type" : "object",
      "required" : [ "patient", "encounterType" ],
      "properties" : {
        "obs" : {
          "type" : "string"
        },
        "patient" : {
          "type" : "string"
        },
        "form" : {
          "type" : "string"
        },
        "location" : {
          "type" : "string"
        },
        "visit" : {
          "type" : "string"
        },
        "orders" : {
          "type" : "string"
        },
        "provider" : {
          "type" : "string"
        },
        "encounterProviders" : {
          "type" : "string"
        },
        "encounterType" : {
          "type" : "string"
        },
        "encounterDatetime" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "encounter"
      }
    },
    "FormResourceUpdate" : {
      "type" : "object",
      
      "properties" : {
        "valueReference" : {
          "type" : "string"
        },
        "dataType" : {
          "type" : "string"
        },
        "form" : {
          "type" : "string"
        },
        "handlerConfig" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        },
        "handler" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "formresource"
      }
    },
    "SpecimenCreate" : {
      "type" : "object",
      
      "properties" : {
        "typeFreeText" : {
          "type" : "string"
        },
        "report" : {
          "type" : "string"
        },
        "existingObs" : {
          "type" : "string"
        },
        "dateCollected" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "identifier" : {
          "type" : "string"
        },
        "sample" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "specimen"
      }
    },
    "BahmniprogramenrollmentAttributeCreate" : {
      "type" : "object",
      "required" : [ "attributeType", "value" ],
      "properties" : {
        "value" : {
          "type" : "string"
        },
        "attributeType" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "bahmniprogramenrollmentattribute"
      }
    },
    "DrugIngredientCreate" : {
      "type" : "object",
      
      "properties" : {
        "strength" : {
          "type" : "string"
        },
        "ingredient" : {
          "type" : "string"
        },
        "units" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "drugingredient"
      }
    },
    "VisitattributetypeUpdate" : {
      "type" : "object",
      "required" : [ "name", "datatypeClassname" ],
      "properties" : {
        "datatypeConfig" : {
          "type" : "string"
        },
        "datatypeClassname" : {
          "type" : "string"
        },
        "handlerConfig" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "maxOccurs" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "preferredHandlerClassname" : {
          "type" : "string"
        },
        "minOccurs" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "visitattributetype"
      }
    },
    "OrdertypeUpdate" : {
      "type" : "object",
      "required" : [ "name", "javaClassName" ],
      "properties" : {
        "conceptClasses" : {
          "type" : "string"
        },
        "javaClassName" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "parent" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "ordertype"
      }
    },
    "RelationshiptypeCreate" : {
      "type" : "object",
      "required" : [ "aIsToB", "bIsToA" ],
      "properties" : {
        "weight" : {
          "type" : "string"
        },
        "aIsToB" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "bIsToA" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "relationshiptype"
      }
    },
    "EntitymappingGet" : {
      "type" : "object",
      
      "properties" : {
        "mappings" : {
          "type" : "string"
        },
        "entity" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "entitymapping"
      }
    },
    "PatientCreate" : {
      "type" : "object",
      "required" : [ "person", "identifiers" ],
      "properties" : {
        "person" : {
          "type" : "string"
        },
        "identifiers" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "patient"
      }
    },
    "RelationshipUpdate" : {
      "type" : "object",
      "required" : [ "relationshipType" ],
      "properties" : {
        "startDate" : {
          "type" : "string"
        },
        "relationshipType" : {
          "type" : "string"
        },
        "voided" : {
          "type" : "string"
        },
        "endDate" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "relationship"
      }
    },
    "BahmniprogramenrollmentAttributeUpdate" : {
      "type" : "object",
      "required" : [ "attributeType", "value" ],
      "properties" : {
        "value" : {
          "type" : "string"
        },
        "attributeType" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "bahmniprogramenrollmentattribute"
      }
    },
    "VisittypeGet" : {
      "type" : "object",
      
      "properties" : {
        "description" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "retired" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string"
        },
        "auditInfo" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "visittype"
      }
    },
    "ConceptdatatypeCreate" : {
      "type" : "object",
      "required" : [ "name" ],
      "properties" : {
        "description" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "conceptdatatype"
      }
    },
    "PersonNameCreate" : {
      "type" : "object",
      "required" : [ "givenName", "familyName" ],
      "properties" : {
        "middleName" : {
          "type" : "string"
        },
        "familyName2" : {
          "type" : "string"
        },
        "degree" : {
          "type" : "string"
        },
        "familyNameSuffix" : {
          "type" : "string"
        },
        "prefix" : {
          "type" : "string"
        },
        "familyName" : {
          "type" : "string"
        },
        "givenName" : {
          "type" : "string"
        },
        "preferred" : {
          "type" : "string"
        },
        "familyNamePrefix" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "personname"
      }
    },
    "SystemsettingUpdate" : {
      "type" : "object",
      
      "properties" : {
        "datatypeConfig" : {
          "type" : "string"
        },
        "datatypeClassname" : {
          "type" : "string"
        },
        "handlerConfig" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        },
        "preferredHandlerClassname" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "systemsetting"
      }
    },
    "EncounterroleUpdate" : {
      "type" : "object",
      "required" : [ "name", "description" ],
      "properties" : {
        "description" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "encounterrole"
      }
    },
    "PatientIdentifierGet" : {
      "type" : "object",
      
      "properties" : {
        "location" : {
          "type" : "string"
        },
        "voided" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string"
        },
        "preferred" : {
          "type" : "string"
        },
        "identifierType" : {
          "type" : "string"
        },
        "identifier" : {
          "type" : "string"
        },
        "auditInfo" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "patientidentifier"
      }
    },
    "ConceptsourceUpdate" : {
      "type" : "object",
      "required" : [ "name", "description" ],
      "properties" : {
        "hl7Code" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "conceptsource"
      }
    },
    "ProviderattributetypeCreate" : {
      "type" : "object",
      "required" : [ "name", "datatypeClassname" ],
      "properties" : {
        "datatypeConfig" : {
          "type" : "string"
        },
        "datatypeClassname" : {
          "type" : "string"
        },
        "handlerConfig" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "maxOccurs" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "preferredHandlerClassname" : {
          "type" : "string"
        },
        "minOccurs" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "providerattributetype"
      }
    },
    "BahmniprogramenrollmentAttributeGet" : {
      "type" : "object",
      
      "properties" : {
        "voided" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "attributeType" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string"
        },
        "auditInfo" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "bahmniprogramenrollmentattribute"
      }
    },
    "ProviderAttributeUpdate" : {
      "type" : "object",
      "required" : [ "attributeType", "value" ],
      "properties" : {
        "value" : {
          "type" : "string"
        },
        "attributeType" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "providerattribute"
      }
    },
    "ProgramenrollmentStateGet" : {
      "type" : "object",
      
      "properties" : {
        "startDate" : {
          "type" : "string"
        },
        "patientProgram" : {
          "type" : "string"
        },
        "voided" : {
          "type" : "string"
        },
        "state" : {
          "type" : "string"
        },
        "endDate" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string"
        },
        "auditInfo" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "programenrollmentstate"
      }
    },
    "ConceptDescriptionUpdate" : {
      "type" : "object",
      "required" : [ "description", "locale" ],
      "properties" : {
        "description" : {
          "type" : "string"
        },
        "locale" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "conceptdescription"
      }
    },
    "PersonNameGet" : {
      "type" : "object",
      
      "properties" : {
        "middleName" : {
          "type" : "string"
        },
        "familyName2" : {
          "type" : "string"
        },
        "degree" : {
          "type" : "string"
        },
        "familyNameSuffix" : {
          "type" : "string"
        },
        "voided" : {
          "type" : "string"
        },
        "prefix" : {
          "type" : "string"
        },
        "familyName" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "givenName" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string"
        },
        "preferred" : {
          "type" : "string"
        },
        "auditInfo" : {
          "type" : "string"
        },
        "familyNamePrefix" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "personname"
      }
    },
    "PersonAddressGet" : {
      "type" : "object",
      
      "properties" : {
        "startDate" : {
          "type" : "string"
        },
        "countyDistrict" : {
          "type" : "string"
        },
        "address1" : {
          "type" : "string"
        },
        "endDate" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "address2" : {
          "type" : "string"
        },
        "address3" : {
          "type" : "string"
        },
        "preferred" : {
          "type" : "string"
        },
        "country" : {
          "type" : "string"
        },
        "address6" : {
          "type" : "string"
        },
        "address5" : {
          "type" : "string"
        },
        "address4" : {
          "type" : "string"
        },
        "postalCode" : {
          "type" : "string"
        },
        "voided" : {
          "type" : "string"
        },
        "cityVillage" : {
          "type" : "string"
        },
        "stateProvince" : {
          "type" : "string"
        },
        "longitude" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string"
        },
        "latitude" : {
          "type" : "string"
        },
        "auditInfo" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "personaddress"
      }
    },
    "ObsUpdate" : {
      "type" : "object",
      "required" : [ "person", "obsDatetime", "concept" ],
      "properties" : {
        "formFieldPath" : {
          "type" : "string"
        },
        "concept" : {
          "type" : "string"
        },
        "person" : {
          "type" : "string"
        },
        "order" : {
          "type" : "string"
        },
        "location" : {
          "type" : "string"
        },
        "obsDatetime" : {
          "type" : "string"
        },
        "formFieldNamespace" : {
          "type" : "string"
        },
        "groupMembers" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        },
        "accessionNumber" : {
          "type" : "string"
        },
        "encounter" : {
          "type" : "string"
        },
        "comment" : {
          "type" : "string"
        },
        "valueModifier" : {
          "type" : "string"
        },
        "valueCodedName" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "obs"
      }
    },
    "VisitattributetypeGet" : {
      "type" : "object",
      
      "properties" : {
        "datatypeConfig" : {
          "type" : "string"
        },
        "datatypeClassname" : {
          "type" : "string"
        },
        "handlerConfig" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "maxOccurs" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "retired" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string"
        },
        "auditInfo" : {
          "type" : "string"
        },
        "preferredHandlerClassname" : {
          "type" : "string"
        },
        "minOccurs" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "visitattributetype"
      }
    },
    "LocationGet" : {
      "type" : "object",
      
      "properties" : {
        "tags" : {
          "type" : "string"
        },
        "countyDistrict" : {
          "type" : "string"
        },
        "retired" : {
          "type" : "string"
        },
        "address1" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "address2" : {
          "type" : "string"
        },
        "parentLocation" : {
          "type" : "string"
        },
        "address3" : {
          "type" : "string"
        },
        "country" : {
          "type" : "string"
        },
        "address6" : {
          "type" : "string"
        },
        "address5" : {
          "type" : "string"
        },
        "address4" : {
          "type" : "string"
        },
        "postalCode" : {
          "type" : "string"
        },
        "childLocations" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "cityVillage" : {
          "type" : "string"
        },
        "stateProvince" : {
          "type" : "string"
        },
        "longitude" : {
          "type" : "string"
        },
        "attributes" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string"
        },
        "latitude" : {
          "type" : "string"
        },
        "auditInfo" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "location"
      }
    },
    "EncounterCreate" : {
      "type" : "object",
      "required" : [ "patient", "encounterType" ],
      "properties" : {
        "obs" : {
          "type" : "string"
        },
        "patient" : {
          "type" : "string"
        },
        "form" : {
          "type" : "string"
        },
        "location" : {
          "type" : "string"
        },
        "visit" : {
          "type" : "string"
        },
        "orders" : {
          "type" : "string"
        },
        "provider" : {
          "type" : "string"
        },
        "encounterProviders" : {
          "type" : "string"
        },
        "encounterType" : {
          "type" : "string"
        },
        "encounterDatetime" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "encounter"
      }
    },
    "ConceptreferencetermmapCreate" : {
      "type" : "object",
      "required" : [ "termA", "termB", "conceptMapType" ],
      "properties" : {
        "conceptMapType" : {
          "type" : "string"
        },
        "termA" : {
          "type" : "string"
        },
        "termB" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "conceptreferencetermmap"
      }
    },
    "ConceptreferencetermUpdate" : {
      "type" : "object",
      "required" : [ "code", "conceptSource" ],
      "properties" : {
        "conceptSource" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "code" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "conceptreferenceterm"
      }
    },
    "PatientidentifiertypeCreate" : {
      "type" : "object",
      "required" : [ "name", "description" ],
      "properties" : {
        "uniquenessBehavior" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "validator" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "locationBehavior" : {
          "type" : "string"
        },
        "checkDigit" : {
          "type" : "string"
        },
        "formatDescription" : {
          "type" : "string"
        },
        "format" : {
          "type" : "string"
        },
        "required" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "patientidentifiertype"
      }
    },
    "UserGet" : {
      "type" : "object",
      
      "properties" : {
        "userProperties" : {
          "type" : "string"
        },
        "person" : {
          "type" : "string"
        },
        "retired" : {
          "type" : "string"
        },
        "privileges" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "username" : {
          "type" : "string"
        },
        "secretQuestion" : {
          "type" : "string"
        },
        "proficientLocales" : {
          "type" : "string"
        },
        "roles" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string"
        },
        "systemId" : {
          "type" : "string"
        },
        "auditInfo" : {
          "type" : "string"
        },
        "allRoles" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "user"
      }
    },
    "PersonattributetypeUpdate" : {
      "type" : "object",
      "required" : [ "name", "description" ],
      "properties" : {
        "editPrivilege" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "sortWeight" : {
          "type" : "string"
        },
        "format" : {
          "type" : "string"
        },
        "searchable" : {
          "type" : "string"
        },
        "foreignKey" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "personattributetype"
      }
    },
    "ObsGet" : {
      "type" : "object",
      
      "properties" : {
        "formFieldPath" : {
          "type" : "string"
        },
        "concept" : {
          "type" : "string"
        },
        "person" : {
          "type" : "string"
        },
        "obsDatetime" : {
          "type" : "string"
        },
        "location" : {
          "type" : "string"
        },
        "formFieldNamespace" : {
          "type" : "string"
        },
        "groupMembers" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "encounter" : {
          "type" : "string"
        },
        "order" : {
          "type" : "string"
        },
        "voided" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        },
        "accessionNumber" : {
          "type" : "string"
        },
        "obsGroup" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string"
        },
        "comment" : {
          "type" : "string"
        },
        "valueModifier" : {
          "type" : "string"
        },
        "auditInfo" : {
          "type" : "string"
        },
        "valueCodedName" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "obs"
      }
    },
    "VisitAttributeUpdate" : {
      "type" : "object",
      "required" : [ "attributeType", "value" ],
      "properties" : {
        "value" : {
          "type" : "string"
        },
        "attributeType" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "visitattribute"
      }
    },
    "BedGet" : {
      "type" : "object",
      
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "bedNumber" : {
          "type" : "string"
        },
        "status" : {
          "type" : "string"
        },
        "bedType" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "bed"
      }
    },
    "CohortMemberUpdate" : {
      "type" : "object",
      "required" : [ "patient" ],
      "properties" : {
        "patient" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "cohortmember"
      }
    },
    "PersonAddressUpdate" : {
      "type" : "object",
      
      "properties" : {
        "startDate" : {
          "type" : "string"
        },
        "countyDistrict" : {
          "type" : "string"
        },
        "address1" : {
          "type" : "string"
        },
        "endDate" : {
          "type" : "string"
        },
        "address2" : {
          "type" : "string"
        },
        "address3" : {
          "type" : "string"
        },
        "preferred" : {
          "type" : "string"
        },
        "country" : {
          "type" : "string"
        },
        "address6" : {
          "type" : "string"
        },
        "address5" : {
          "type" : "string"
        },
        "postalCode" : {
          "type" : "string"
        },
        "address4" : {
          "type" : "string"
        },
        "cityVillage" : {
          "type" : "string"
        },
        "stateProvince" : {
          "type" : "string"
        },
        "longitude" : {
          "type" : "string"
        },
        "latitude" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "personaddress"
      }
    },
    "ConceptreferencetermCreate" : {
      "type" : "object",
      "required" : [ "code", "conceptSource" ],
      "properties" : {
        "conceptSource" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "code" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "conceptreferenceterm"
      }
    },
    "ProviderGet" : {
      "type" : "object",
      
      "properties" : {
        "person" : {
          "type" : "string"
        },
        "retired" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "attributes" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string"
        },
        "identifier" : {
          "type" : "string"
        },
        "auditInfo" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "provider"
      }
    },
    "PatientGet" : {
      "type" : "object",
      
      "properties" : {
        "person" : {
          "type" : "string"
        },
        "identifiers" : {
          "type" : "string"
        },
        "voided" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string"
        },
        "auditInfo" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "patient"
      }
    },
    "FieldUpdate" : {
      "type" : "object",
      "required" : [ "name", "fieldType", "selectMultiple" ],
      "properties" : {
        "attributeName" : {
          "type" : "string"
        },
        "concept" : {
          "type" : "string"
        },
        "selectMultiple" : {
          "type" : "string"
        },
        "tableName" : {
          "type" : "string"
        },
        "fieldType" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "defaultValue" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "field"
      }
    },
    "DrugCreate" : {
      "type" : "object",
      "required" : [ "name", "combination", "concept" ],
      "properties" : {
        "concept" : {
          "type" : "string"
        },
        "maximumDailyDose" : {
          "type" : "string"
        },
        "strength" : {
          "type" : "string"
        },
        "route" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "combination" : {
          "type" : "string"
        },
        "doseStrength" : {
          "type" : "string"
        },
        "dosageForm" : {
          "type" : "string"
        },
        "units" : {
          "type" : "string"
        },
        "minimumDailyDose" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "drug"
      }
    },
    "ProgramCreate" : {
      "type" : "object",
      "required" : [ "name", "description", "concept" ],
      "properties" : {
        "outcomesConcept" : {
          "type" : "string"
        },
        "concept" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "retired" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "program"
      }
    },
    "SystemsettingGet" : {
      "type" : "object",
      
      "properties" : {
        "datatypeConfig" : {
          "type" : "string"
        },
        "datatypeClassname" : {
          "type" : "string"
        },
        "handlerConfig" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "property" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string"
        },
        "preferredHandlerClassname" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "systemsetting"
      }
    },
    "ConceptsourceGet" : {
      "type" : "object",
      
      "properties" : {
        "hl7Code" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "retired" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string"
        },
        "auditInfo" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "conceptsource"
      }
    },
    "OrdertypeGet" : {
      "type" : "object",
      
      "properties" : {
        "conceptClasses" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "javaClassName" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "retired" : {
          "type" : "string"
        },
        "parent" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string"
        },
        "auditInfo" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "ordertype"
      }
    },
    "ConceptstopwordGet" : {
      "type" : "object",
      
      "properties" : {
        "locale" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "conceptstopword"
      }
    },
    "FormFormfieldGet" : {
      "type" : "object",
      
      "properties" : {
        "field" : {
          "type" : "string"
        },
        "fieldNumber" : {
          "type" : "string"
        },
        "form" : {
          "type" : "string"
        },
        "maxOccurs" : {
          "type" : "string"
        },
        "retired" : {
          "type" : "string"
        },
        "sortWeight" : {
          "type" : "string"
        },
        "pageNumber" : {
          "type" : "string"
        },
        "parent" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string"
        },
        "required" : {
          "type" : "string"
        },
        "fieldPart" : {
          "type" : "string"
        },
        "auditInfo" : {
          "type" : "string"
        },
        "minOccurs" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "formformfield"
      }
    },
    "VisittypeUpdate" : {
      "type" : "object",
      "required" : [ "name" ],
      "properties" : {
        "description" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "visittype"
      }
    },
    "AllergyUpdate" : {
      "type" : "object",
      "required" : [ "person", "startDate", "allergyType", "allergen" ],
      "properties" : {
        "reaction" : {
          "type" : "string"
        },
        "startDate" : {
          "type" : "string"
        },
        "allergen" : {
          "type" : "string"
        },
        "person" : {
          "type" : "string"
        },
        "stopObs" : {
          "type" : "string"
        },
        "startObs" : {
          "type" : "string"
        },
        "allergyType" : {
          "type" : "string"
        },
        "severity" : {
          "type" : "string"
        },
        "comments" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "allergy"
      }
    },
    "ProblemGet" : {
      "type" : "object",
      
      "properties" : {
        "startDate" : {
          "type" : "string"
        },
        "person" : {
          "type" : "string"
        },
        "startObs" : {
          "type" : "string"
        },
        "stopObs" : {
          "type" : "string"
        },
        "sortWeight" : {
          "type" : "string"
        },
        "problem" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "endDate" : {
          "type" : "string"
        },
        "modifier" : {
          "type" : "string"
        },
        "voided" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string"
        },
        "activeListType" : {
          "type" : "string"
        },
        "comments" : {
          "type" : "string"
        },
        "auditInfo" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "problem"
      }
    },
    "ObsCreate" : {
      "type" : "object",
      "required" : [ "person", "obsDatetime", "concept" ],
      "properties" : {
        "formFieldPath" : {
          "type" : "string"
        },
        "concept" : {
          "type" : "string"
        },
        "person" : {
          "type" : "string"
        },
        "order" : {
          "type" : "string"
        },
        "location" : {
          "type" : "string"
        },
        "obsDatetime" : {
          "type" : "string"
        },
        "formFieldNamespace" : {
          "type" : "string"
        },
        "groupMembers" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        },
        "accessionNumber" : {
          "type" : "string"
        },
        "encounter" : {
          "type" : "string"
        },
        "comment" : {
          "type" : "string"
        },
        "valueModifier" : {
          "type" : "string"
        },
        "valueCodedName" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "obs"
      }
    },
    "BahmniordersetCreate" : {
      "type" : "object",
      "required" : [ "name" ],
      "properties" : {
        "orderSetMembers" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "operator" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "bahmniorderset"
      }
    },
    "PersonattributetypeCreate" : {
      "type" : "object",
      "required" : [ "name", "description" ],
      "properties" : {
        "editPrivilege" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "sortWeight" : {
          "type" : "string"
        },
        "format" : {
          "type" : "string"
        },
        "searchable" : {
          "type" : "string"
        },
        "foreignKey" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "personattributetype"
      }
    },
    "VisitGet" : {
      "type" : "object",
      
      "properties" : {
        "patient" : {
          "type" : "string"
        },
        "stopDatetime" : {
          "type" : "string"
        },
        "location" : {
          "type" : "string"
        },
        "voided" : {
          "type" : "string"
        },
        "indication" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "attributes" : {
          "type" : "string"
        },
        "encounters" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string"
        },
        "auditInfo" : {
          "type" : "string"
        },
        "startDatetime" : {
          "type" : "string"
        },
        "visitType" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "visit"
      }
    },
    "CohortMemberCreate" : {
      "type" : "object",
      "required" : [ "patient" ],
      "properties" : {
        "patient" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "cohortmember"
      }
    },
    "LocationAttributeCreate" : {
      "type" : "object",
      "required" : [ "attributeType", "value" ],
      "properties" : {
        "value" : {
          "type" : "string"
        },
        "attributeType" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "locationattribute"
      }
    },
    "ConceptNameUpdate" : {
      "type" : "object",
      "required" : [ "name", "locale" ],
      "properties" : {
        "conceptNameType" : {
          "type" : "string"
        },
        "locale" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "localePreferred" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "conceptname"
      }
    },
    "ConceptclassUpdate" : {
      "type" : "object",
      "required" : [ "name" ],
      "properties" : {
        "description" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "conceptclass"
      }
    },
    "FieldAnswerUpdate" : {
      "type" : "object",
      "required" : [ "field", "concept" ],
      "properties" : {
        "field" : {
          "type" : "string"
        },
        "concept" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "fieldanswer"
      }
    },
    "ProviderattributetypeGet" : {
      "type" : "object",
      
      "properties" : {
        "datatypeConfig" : {
          "type" : "string"
        },
        "datatypeClassname" : {
          "type" : "string"
        },
        "handlerConfig" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "maxOccurs" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "retired" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string"
        },
        "auditInfo" : {
          "type" : "string"
        },
        "preferredHandlerClassname" : {
          "type" : "string"
        },
        "minOccurs" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "providerattributetype"
      }
    },
    "ProviderAttributeGet" : {
      "type" : "object",
      
      "properties" : {
        "voided" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "attributeType" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string"
        },
        "auditInfo" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "providerattribute"
      }
    },
    "ProgramenrollmentCreate" : {
      "type" : "object",
      "required" : [ "patient", "program", "dateEnrolled" ],
      "properties" : {
        "patient" : {
          "type" : "string"
        },
        "location" : {
          "type" : "string"
        },
        "voided" : {
          "type" : "string"
        },
        "program" : {
          "type" : "string"
        },
        "states" : {
          "type" : "string"
        },
        "dateEnrolled" : {
          "type" : "string"
        },
        "outcome" : {
          "type" : "string"
        },
        "dateCompleted" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "programenrollment"
      }
    },
    "ProviderCreate" : {
      "type" : "object",
      "required" : [ "person", "identifier" ],
      "properties" : {
        "person" : {
          "type" : "string"
        },
        "retired" : {
          "type" : "string"
        },
        "attributes" : {
          "type" : "string"
        },
        "identifier" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "provider"
      }
    },
    "OrderCreate" : {
      "type" : "object",
      "required" : [ "encounter", "type" ],
      "properties" : {
        "durationUnits" : {
          "type" : "string"
        },
        "complex" : {
          "type" : "string"
        },
        "concept" : {
          "type" : "string"
        },
        "orderReasonNonCoded" : {
          "type" : "string"
        },
        "instructions" : {
          "type" : "string"
        },
        "autoExpireDate" : {
          "type" : "string"
        },
        "frequency" : {
          "type" : "string"
        },
        "encounter" : {
          "type" : "string"
        },
        "commentToFulfiller" : {
          "type" : "string"
        },
        "doseUnits" : {
          "type" : "string"
        },
        "careSetting" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string",
          "enum" : [ "drugorder", "testorder" ]
        },
        "brandName" : {
          "type" : "string"
        },
        "dose" : {
          "type" : "string"
        },
        "urgency" : {
          "type" : "string"
        },
        "dateStopped" : {
          "type" : "string"
        },
        "patient" : {
          "type" : "string"
        },
        "dateActivated" : {
          "type" : "string"
        },
        "previousOrder" : {
          "type" : "string"
        },
        "action" : {
          "type" : "string"
        },
        "laterality" : {
          "type" : "string"
        },
        "quantity" : {
          "type" : "string"
        },
        "drug" : {
          "type" : "string"
        },
        "orderReason" : {
          "type" : "string"
        },
        "orderer" : {
          "type" : "string"
        },
        "dispenseAsWritten" : {
          "type" : "string"
        },
        "asNeededCondition" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "dosingInstructions" : {
          "type" : "string"
        },
        "asNeeded" : {
          "type" : "string"
        },
        "specimenSource" : {
          "type" : "string"
        },
        "units" : {
          "type" : "string"
        },
        "duration" : {
          "type" : "string"
        },
        "dosingType" : {
          "type" : "string"
        },
        "route" : {
          "type" : "string"
        },
        "numRefills" : {
          "type" : "string"
        },
        "quantityUnits" : {
          "type" : "string"
        },
        "orderNumber" : {
          "type" : "string"
        },
        "prn" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string"
        },
        "numberOfRepeats" : {
          "type" : "string"
        },
        "clinicalHistory" : {
          "type" : "string"
        },
        "auditInfo" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "order"
      }
    },
    "RelationshipGet" : {
      "type" : "object",
      
      "properties" : {
        "startDate" : {
          "type" : "string"
        },
        "relationshipType" : {
          "type" : "string"
        },
        "voided" : {
          "type" : "string"
        },
        "endDate" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string"
        },
        "personA" : {
          "type" : "string"
        },
        "personB" : {
          "type" : "string"
        },
        "auditInfo" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "relationship"
      }
    },
    "EncounterEncounterproviderCreate" : {
      "type" : "object",
      
      "properties" : {
        "encounterRole" : {
          "type" : "string"
        },
        "provider" : {
          "type" : "string"
        },
        "encounter" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "encounterencounterprovider"
      }
    },
    "PersonattributetypeGet" : {
      "type" : "object",
      
      "properties" : {
        "concept" : {
          "type" : "string"
        },
        "editPrivilege" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "retired" : {
          "type" : "string"
        },
        "sortWeight" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "format" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string"
        },
        "auditInfo" : {
          "type" : "string"
        },
        "searchable" : {
          "type" : "string"
        },
        "foreignKey" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "personattributetype"
      }
    },
    "LocationattributetypeGet" : {
      "type" : "object",
      
      "properties" : {
        "datatypeConfig" : {
          "type" : "string"
        },
        "datatypeClassname" : {
          "type" : "string"
        },
        "handlerConfig" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "maxOccurs" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "retired" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string"
        },
        "auditInfo" : {
          "type" : "string"
        },
        "preferredHandlerClassname" : {
          "type" : "string"
        },
        "minOccurs" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "locationattributetype"
      }
    },
    "ConceptsourceCreate" : {
      "type" : "object",
      "required" : [ "name", "description" ],
      "properties" : {
        "hl7Code" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "conceptsource"
      }
    },
    "EncounterEncounterproviderGet" : {
      "type" : "object",
      
      "properties" : {
        "encounterRole" : {
          "type" : "string"
        },
        "voided" : {
          "type" : "string"
        },
        "provider" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string"
        },
        "auditInfo" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "encounterencounterprovider"
      }
    },
    "VisitAttributeGet" : {
      "type" : "object",
      
      "properties" : {
        "voided" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "attributeType" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string"
        },
        "auditInfo" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "visitattribute"
      }
    },
    "ConceptDescriptionCreate" : {
      "type" : "object",
      "required" : [ "description", "locale" ],
      "properties" : {
        "description" : {
          "type" : "string"
        },
        "locale" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "conceptdescription"
      }
    },
    "RoleGet" : {
      "type" : "object",
      
      "properties" : {
        "allInheritedRoles" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "retired" : {
          "type" : "string"
        },
        "privileges" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string"
        },
        "auditInfo" : {
          "type" : "string"
        },
        "inheritedRoles" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "role"
      }
    },
    "ProviderUpdate" : {
      "type" : "object",
      "required" : [ "person", "identifier" ],
      "properties" : {
        "person" : {
          "type" : "string"
        },
        "retired" : {
          "type" : "string"
        },
        "attributes" : {
          "type" : "string"
        },
        "identifier" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "provider"
      }
    },
    "RelationshiptypeUpdate" : {
      "type" : "object",
      "required" : [ "aIsToB", "bIsToA" ],
      "properties" : {
        "weight" : {
          "type" : "string"
        },
        "aIsToB" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "bIsToA" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "relationshiptype"
      }
    },
    "LocationCreate" : {
      "type" : "object",
      "required" : [ "name" ],
      "properties" : {
        "tags" : {
          "type" : "string"
        },
        "countyDistrict" : {
          "type" : "string"
        },
        "address1" : {
          "type" : "string"
        },
        "address2" : {
          "type" : "string"
        },
        "parentLocation" : {
          "type" : "string"
        },
        "address3" : {
          "type" : "string"
        },
        "country" : {
          "type" : "string"
        },
        "address6" : {
          "type" : "string"
        },
        "address5" : {
          "type" : "string"
        },
        "address4" : {
          "type" : "string"
        },
        "postalCode" : {
          "type" : "string"
        },
        "childLocations" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "cityVillage" : {
          "type" : "string"
        },
        "stateProvince" : {
          "type" : "string"
        },
        "longitude" : {
          "type" : "string"
        },
        "attributes" : {
          "type" : "string"
        },
        "latitude" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "location"
      }
    },
    "PatientUpdate" : {
      "type" : "object",
      "required" : [ "person" ],
      "properties" : {
        "person" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "patient"
      }
    },
    "ProgramattributetypeCreate" : {
      "type" : "object",
      "required" : [ "name", "datatypeClassname" ],
      "properties" : {
        "datatypeConfig" : {
          "type" : "string"
        },
        "datatypeClassname" : {
          "type" : "string"
        },
        "handlerConfig" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "maxOccurs" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "preferredHandlerClassname" : {
          "type" : "string"
        },
        "minOccurs" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "programattributetype"
      }
    },
    "WorkflowUpdate" : {
      "type" : "object",
      "required" : [ "name" ],
      "properties" : {
        "description" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "workflow"
      }
    },
    "ConceptdatatypeGet" : {
      "type" : "object",
      
      "properties" : {
        "description" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "retired" : {
          "type" : "string"
        },
        "hl7Abbreviation" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string"
        },
        "auditInfo" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "conceptdatatype"
      }
    },
    "BahmniprogramenrollmentCreate" : {
      "type" : "object",
      "required" : [ "patient", "program", "dateEnrolled" ],
      "properties" : {
        "patient" : {
          "type" : "string"
        },
        "location" : {
          "type" : "string"
        },
        "voided" : {
          "type" : "string"
        },
        "program" : {
          "type" : "string"
        },
        "states" : {
          "type" : "string"
        },
        "attributes" : {
          "type" : "string"
        },
        "dateEnrolled" : {
          "type" : "string"
        },
        "outcome" : {
          "type" : "string"
        },
        "dateCompleted" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "bahmniprogramenrollment"
      }
    },
    "ProviderattributetypeUpdate" : {
      "type" : "object",
      "required" : [ "name", "datatypeClassname" ],
      "properties" : {
        "datatypeConfig" : {
          "type" : "string"
        },
        "datatypeClassname" : {
          "type" : "string"
        },
        "handlerConfig" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "maxOccurs" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "preferredHandlerClassname" : {
          "type" : "string"
        },
        "minOccurs" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "providerattributetype"
      }
    },
    "Hl7sourceCreate" : {
      "type" : "object",
      "required" : [ "name", "description" ],
      "properties" : {
        "description" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "hl7source"
      }
    },
    "OrderfrequencyGet" : {
      "type" : "object",
      
      "properties" : {
        "concept" : {
          "type" : "string"
        },
        "frequencyPerDay" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "retired" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string"
        },
        "auditInfo" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "orderfrequency"
      }
    },
    "CohortUpdate" : {
      "type" : "object",
      "required" : [ "name", "description" ],
      "properties" : {
        "description" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "cohort"
      }
    },
    "EncountertypeCreate" : {
      "type" : "object",
      "required" : [ "name", "description" ],
      "properties" : {
        "description" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "encountertype"
      }
    },
    "ConceptreferencetermmapGet" : {
      "type" : "object",
      
      "properties" : {
        "conceptMapType" : {
          "type" : "string"
        },
        "termA" : {
          "type" : "string"
        },
        "termB" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string"
        },
        "auditInfo" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "conceptreferencetermmap"
      }
    },
    "ConceptmaptypeCreate" : {
      "type" : "object",
      "required" : [ "name" ],
      "properties" : {
        "isHidden" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "conceptmaptype"
      }
    },
    "CohortGet" : {
      "type" : "object",
      
      "properties" : {
        "memberIds" : {
          "type" : "string"
        },
        "voided" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string"
        },
        "auditInfo" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "cohort"
      }
    },
    "ProviderAttributeCreate" : {
      "type" : "object",
      "required" : [ "attributeType", "value" ],
      "properties" : {
        "value" : {
          "type" : "string"
        },
        "attributeType" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "providerattribute"
      }
    },
    "RelationshiptypeGet" : {
      "type" : "object",
      
      "properties" : {
        "weight" : {
          "type" : "string"
        },
        "aIsToB" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "retired" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string"
        },
        "auditInfo" : {
          "type" : "string"
        },
        "bIsToA" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "relationshiptype"
      }
    },
    "FormResourceCreate" : {
      "type" : "object",
      
      "properties" : {
        "valueReference" : {
          "type" : "string"
        },
        "dataType" : {
          "type" : "string"
        },
        "form" : {
          "type" : "string"
        },
        "handlerConfig" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        },
        "handler" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "formresource"
      }
    },
    "ProgramattributetypeGet" : {
      "type" : "object",
      
      "properties" : {
        "datatypeConfig" : {
          "type" : "string"
        },
        "datatypeClassname" : {
          "type" : "string"
        },
        "handlerConfig" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "maxOccurs" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "retired" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string"
        },
        "auditInfo" : {
          "type" : "string"
        },
        "preferredHandlerClassname" : {
          "type" : "string"
        },
        "minOccurs" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "programattributetype"
      }
    },
    "ConceptstopwordCreate" : {
      "type" : "object",
      "required" : [ "value" ],
      "properties" : {
        "locale" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "conceptstopword"
      }
    },
    "PersonCreate" : {
      "type" : "object",
      "required" : [ "names", "gender" ],
      "properties" : {
        "birthdateEstimated" : {
          "type" : "string"
        },
        "names" : {
          "type" : "string"
        },
        "age" : {
          "type" : "string"
        },
        "birthdate" : {
          "type" : "string"
        },
        "deathdateEstimated" : {
          "type" : "string"
        },
        "causeOfDeath" : {
          "type" : "string"
        },
        "gender" : {
          "type" : "string"
        },
        "attributes" : {
          "type" : "string"
        },
        "addresses" : {
          "type" : "string"
        },
        "dead" : {
          "type" : "string"
        },
        "deathDate" : {
          "type" : "string"
        },
        "birthtime" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "person"
      }
    },
    "BedPatientAssignmentGet" : {
      "type" : "object",
      
      "properties" : {
        "patient" : {
          "type" : "string"
        },
        "bed" : {
          "type" : "string"
        },
        "encounter" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "bedpatientassignment"
      }
    },
    "CohortCreate" : {
      "type" : "object",
      "required" : [ "name", "description", "memberIds" ],
      "properties" : {
        "memberIds" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "cohort"
      }
    },
    "DrugIngredientUpdate" : {
      "type" : "object",
      
      "properties" : {
        "strength" : {
          "type" : "string"
        },
        "ingredient" : {
          "type" : "string"
        },
        "units" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "drugingredient"
      }
    },
    "ConceptMappingUpdate" : {
      "type" : "object",
      "required" : [ "conceptReferenceTerm", "conceptMapType" ],
      "properties" : {
        "conceptMapType" : {
          "type" : "string"
        },
        "conceptReferenceTerm" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "conceptmapping"
      }
    },
    "FieldAnswerGet" : {
      "type" : "object",
      
      "properties" : {
        "field" : {
          "type" : "string"
        },
        "concept" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string"
        },
        "auditInfo" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "fieldanswer"
      }
    },
    "PatientidentifiertypeUpdate" : {
      "type" : "object",
      "required" : [ "name", "description" ],
      "properties" : {
        "uniquenessBehavior" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "validator" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "locationBehavior" : {
          "type" : "string"
        },
        "checkDigit" : {
          "type" : "string"
        },
        "formatDescription" : {
          "type" : "string"
        },
        "format" : {
          "type" : "string"
        },
        "required" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "patientidentifiertype"
      }
    },
    "ProgramenrollmentStateCreate" : {
      "type" : "object",
      "required" : [ "state" ],
      "properties" : {
        "state" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "programenrollmentstate"
      }
    },
    "EncounterGet" : {
      "type" : "object",
      
      "properties" : {
        "obs" : {
          "type" : "string"
        },
        "patient" : {
          "type" : "string"
        },
        "form" : {
          "type" : "string"
        },
        "location" : {
          "type" : "string"
        },
        "voided" : {
          "type" : "string"
        },
        "visit" : {
          "type" : "string"
        },
        "orders" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string"
        },
        "encounterProviders" : {
          "type" : "string"
        },
        "auditInfo" : {
          "type" : "string"
        },
        "encounterType" : {
          "type" : "string"
        },
        "encounterDatetime" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "encounter"
      }
    },
    "ProgramGet" : {
      "type" : "object",
      
      "properties" : {
        "outcomesConcept" : {
          "type" : "string"
        },
        "concept" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "retired" : {
          "type" : "string"
        },
        "allWorkflows" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string"
        },
        "auditInfo" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "program"
      }
    },
    "ProblemUpdate" : {
      "type" : "object",
      "required" : [ "person", "startDate", "problem" ],
      "properties" : {
        "modifier" : {
          "type" : "string"
        },
        "startDate" : {
          "type" : "string"
        },
        "person" : {
          "type" : "string"
        },
        "stopObs" : {
          "type" : "string"
        },
        "startObs" : {
          "type" : "string"
        },
        "sortWeight" : {
          "type" : "string"
        },
        "problem" : {
          "type" : "string"
        },
        "comments" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "problem"
      }
    },
    "FormFormfieldUpdate" : {
      "type" : "object",
      "required" : [ "form", "field", "required" ],
      "properties" : {
        "field" : {
          "type" : "string"
        },
        "fieldNumber" : {
          "type" : "string"
        },
        "form" : {
          "type" : "string"
        },
        "maxOccurs" : {
          "type" : "string"
        },
        "sortWeight" : {
          "type" : "string"
        },
        "pageNumber" : {
          "type" : "string"
        },
        "parent" : {
          "type" : "string"
        },
        "fieldPart" : {
          "type" : "string"
        },
        "required" : {
          "type" : "string"
        },
        "minOccurs" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "formformfield"
      }
    },
    "EncounterEncounterproviderUpdate" : {
      "type" : "object",
      
      "properties" : {
        "encounterRole" : {
          "type" : "string"
        },
        "voided" : {
          "type" : "string"
        },
        "voidReason" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "encounterencounterprovider"
      }
    },
    "EncounterroleGet" : {
      "type" : "object",
      
      "properties" : {
        "description" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "retired" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string"
        },
        "auditInfo" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "encounterrole"
      }
    },
    "ConceptclassCreate" : {
      "type" : "object",
      "required" : [ "name" ],
      "properties" : {
        "description" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "conceptclass"
      }
    },
    "WorkflowCreate" : {
      "type" : "object",
      "required" : [ "name" ],
      "properties" : {
        "description" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "workflow"
      }
    },
    "DrugIngredientGet" : {
      "type" : "object",
      
      "properties" : {
        "strength" : {
          "type" : "string"
        },
        "ingredient" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string"
        },
        "units" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "drugingredient"
      }
    },
    "RoleUpdate" : {
      "type" : "object",
      
      "properties" : {
        "description" : {
          "type" : "string"
        },
        "privileges" : {
          "type" : "string"
        },
        "inheritedRoles" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "role"
      }
    },
    "PrivilegeCreate" : {
      "type" : "object",
      "required" : [ "name" ],
      "properties" : {
        "description" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "privilege"
      }
    },
    "FormCreate" : {
      "type" : "object",
      "required" : [ "name", "version" ],
      "properties" : {
        "template" : {
          "type" : "string"
        },
        "formFields" : {
          "type" : "string"
        },
        "xslt" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "published" : {
          "type" : "string"
        },
        "build" : {
          "type" : "string"
        },
        "encounterType" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "form"
      }
    },
    "BahmniordersetBahmniordersetmemberGet" : {
      "type" : "object",
      
      "properties" : {
        "concept" : {
          "type" : "string"
        },
        "orderType" : {
          "type" : "string"
        },
        "retired" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string"
        },
        "auditInfo" : {
          "type" : "string"
        },
        "orderTemplate" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "bahmniordersetbahmniordersetmember"
      }
    },
    "LocationAttributeUpdate" : {
      "type" : "object",
      "required" : [ "attributeType", "value" ],
      "properties" : {
        "value" : {
          "type" : "string"
        },
        "attributeType" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "locationattribute"
      }
    },
    "ConceptCreate" : {
      "type" : "object",
      "required" : [ "names", "datatype", "conceptClass" ],
      "properties" : {
        "allowDecimal" : {
          "type" : "string"
        },
        "conceptClass" : {
          "type" : "string"
        },
        "set" : {
          "type" : "string"
        },
        "lowCritical" : {
          "type" : "string"
        },
        "answers" : {
          "type" : "string"
        },
        "hiNormal" : {
          "type" : "string"
        },
        "displayPrecision" : {
          "type" : "string"
        },
        "units" : {
          "type" : "string"
        },
        "lowNormal" : {
          "type" : "string"
        },
        "descriptions" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        },
        "hiCritical" : {
          "type" : "string"
        },
        "lowAbsolute" : {
          "type" : "string"
        },
        "hiAbsolute" : {
          "type" : "string"
        },
        "names" : {
          "type" : "string"
        },
        "mappings" : {
          "type" : "string"
        },
        "datatype" : {
          "type" : "string"
        },
        "setMembers" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "concept"
      }
    },
    "BahmniordersetBahmniordersetmemberUpdate" : {
      "type" : "object",
      
      "properties" : {
        "concept" : {
          "type" : "string"
        },
        "orderType" : {
          "type" : "string"
        },
        "retired" : {
          "type" : "string"
        },
        "orderTemplate" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "bahmniordersetbahmniordersetmember"
      }
    },
    "PatientidentifiertypeGet" : {
      "type" : "object",
      
      "properties" : {
        "uniquenessBehavior" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "validator" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "retired" : {
          "type" : "string"
        },
        "locationBehavior" : {
          "type" : "string"
        },
        "checkDigit" : {
          "type" : "string"
        },
        "formatDescription" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "format" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string"
        },
        "required" : {
          "type" : "string"
        },
        "auditInfo" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "patientidentifiertype"
      }
    },
    "ProgramenrollmentUpdate" : {
      "type" : "object",
      "required" : [ "dateEnrolled" ],
      "properties" : {
        "location" : {
          "type" : "string"
        },
        "voided" : {
          "type" : "string"
        },
        "states" : {
          "type" : "string"
        },
        "dateEnrolled" : {
          "type" : "string"
        },
        "outcome" : {
          "type" : "string"
        },
        "dateCompleted" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "programenrollment"
      }
    },
    "WorkflowGet" : {
      "type" : "object",
      
      "properties" : {
        "concept" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "retired" : {
          "type" : "string"
        },
        "states" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "workflow"
      }
    },
    "PatientprofileCreate" : {
      "type" : "object",
      
      "properties" : {
        "patient" : {
          "type" : "string"
        },
        "image" : {
          "type" : "string"
        },
        "relationships" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "patientprofile"
      }
    },
    "ConceptDescriptionGet" : {
      "type" : "object",
      
      "properties" : {
        "description" : {
          "type" : "string"
        },
        "locale" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string"
        },
        "auditInfo" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "conceptdescription"
      }
    },
    "PersonGet" : {
      "type" : "object",
      
      "properties" : {
        "birthdateEstimated" : {
          "type" : "string"
        },
        "preferredName" : {
          "type" : "string"
        },
        "deathdateEstimated" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "deathDate" : {
          "type" : "string"
        },
        "preferredAddress" : {
          "type" : "string"
        },
        "voided" : {
          "type" : "string"
        },
        "names" : {
          "type" : "string"
        },
        "age" : {
          "type" : "string"
        },
        "birthdate" : {
          "type" : "string"
        },
        "gender" : {
          "type" : "string"
        },
        "causeOfDeath" : {
          "type" : "string"
        },
        "attributes" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string"
        },
        "addresses" : {
          "type" : "string"
        },
        "dead" : {
          "type" : "string"
        },
        "auditInfo" : {
          "type" : "string"
        },
        "birthtime" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "person"
      }
    },
    "ConceptreferencetermmapUpdate" : {
      "type" : "object",
      "required" : [ "termA", "termB", "conceptMapType" ],
      "properties" : {
        "conceptMapType" : {
          "type" : "string"
        },
        "termA" : {
          "type" : "string"
        },
        "termB" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "conceptreferencetermmap"
      }
    },
    "SpecimenGet" : {
      "type" : "object",
      
      "properties" : {
        "typeFreeText" : {
          "type" : "string"
        },
        "report" : {
          "type" : "string"
        },
        "dateCollected" : {
          "type" : "string"
        },
        "existingObs" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "identifier" : {
          "type" : "string"
        },
        "sample" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "specimen"
      }
    },
    "DrugGet" : {
      "type" : "object",
      
      "properties" : {
        "concept" : {
          "type" : "string"
        },
        "strength" : {
          "type" : "string"
        },
        "retired" : {
          "type" : "string"
        },
        "doseStrength" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "units" : {
          "type" : "string"
        },
        "maximumDailyDose" : {
          "type" : "string"
        },
        "route" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "combination" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string"
        },
        "dosageForm" : {
          "type" : "string"
        },
        "auditInfo" : {
          "type" : "string"
        },
        "minimumDailyDose" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "drug"
      }
    },
    "CaresettingGet" : {
      "type" : "object",
      
      "properties" : {
        "description" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "careSettingType" : {
          "type" : "string"
        },
        "retired" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string"
        },
        "auditInfo" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "caresetting"
      }
    },
    "FieldGet" : {
      "type" : "object",
      
      "properties" : {
        "attributeName" : {
          "type" : "string"
        },
        "concept" : {
          "type" : "string"
        },
        "selectMultiple" : {
          "type" : "string"
        },
        "tableName" : {
          "type" : "string"
        },
        "fieldType" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "retired" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string"
        },
        "defaultValue" : {
          "type" : "string"
        },
        "auditInfo" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "field"
      }
    },
    "VisitattributetypeCreate" : {
      "type" : "object",
      "required" : [ "name", "datatypeClassname" ],
      "properties" : {
        "datatypeConfig" : {
          "type" : "string"
        },
        "datatypeClassname" : {
          "type" : "string"
        },
        "handlerConfig" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "maxOccurs" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "preferredHandlerClassname" : {
          "type" : "string"
        },
        "minOccurs" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "visitattributetype"
      }
    },
    "BahmniordersetGet" : {
      "type" : "object",
      
      "properties" : {
        "orderSetMembers" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "retired" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string"
        },
        "auditInfo" : {
          "type" : "string"
        },
        "operator" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "bahmniorderset"
      }
    },
    "ConceptGet" : {
      "type" : "object",
      
      "properties" : {
        "conceptClass" : {
          "type" : "string"
        },
        "set" : {
          "type" : "string"
        },
        "retired" : {
          "type" : "string"
        },
        "answers" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "descriptions" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        },
        "names" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "mappings" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string"
        },
        "datatype" : {
          "type" : "string"
        },
        "setMembers" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "concept"
      }
    },
    "ConceptUpdate" : {
      "type" : "object",
      "required" : [ "datatype", "conceptClass" ],
      "properties" : {
        "allowDecimal" : {
          "type" : "string"
        },
        "conceptClass" : {
          "type" : "string"
        },
        "set" : {
          "type" : "string"
        },
        "lowCritical" : {
          "type" : "string"
        },
        "answers" : {
          "type" : "string"
        },
        "hiNormal" : {
          "type" : "string"
        },
        "displayPrecision" : {
          "type" : "string"
        },
        "units" : {
          "type" : "string"
        },
        "lowNormal" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        },
        "hiCritical" : {
          "type" : "string"
        },
        "lowAbsolute" : {
          "type" : "string"
        },
        "hiAbsolute" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "mappings" : {
          "type" : "string"
        },
        "datatype" : {
          "type" : "string"
        },
        "setMembers" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "concept"
      }
    },
    "LocationattributetypeCreate" : {
      "type" : "object",
      "required" : [ "name", "datatypeClassname" ],
      "properties" : {
        "datatypeConfig" : {
          "type" : "string"
        },
        "datatypeClassname" : {
          "type" : "string"
        },
        "handlerConfig" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "maxOccurs" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "preferredHandlerClassname" : {
          "type" : "string"
        },
        "minOccurs" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "locationattributetype"
      }
    },
    "AdmissionLocationGet" : {
      "type" : "object",
      
      "properties" : {
        "bedLayouts" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "admissionlocation"
      }
    },
    "OrderGet" : {
      "type" : "object",
      
      "properties" : {
        "orderReason" : {
          "type" : "string"
        },
        "orderer" : {
          "type" : "string"
        },
        "orderReasonNonCoded" : {
          "type" : "string"
        },
        "concept" : {
          "type" : "string"
        },
        "instructions" : {
          "type" : "string"
        },
        "autoExpireDate" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "commentToFulfiller" : {
          "type" : "string"
        },
        "encounter" : {
          "type" : "string"
        },
        "careSetting" : {
          "type" : "string"
        },
        "urgency" : {
          "type" : "string"
        },
        "dateStopped" : {
          "type" : "string"
        },
        "patient" : {
          "type" : "string"
        },
        "dateActivated" : {
          "type" : "string"
        },
        "orderNumber" : {
          "type" : "string"
        },
        "action" : {
          "type" : "string"
        },
        "previousOrder" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string"
        },
        "auditInfo" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "order"
      }
    },
    "ConceptNameGet" : {
      "type" : "object",
      
      "properties" : {
        "conceptNameType" : {
          "type" : "string"
        },
        "locale" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "localePreferred" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string"
        },
        "auditInfo" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "conceptname"
      }
    },
    "CustomdatatypeHandlersGet" : {
      "type" : "object",
      
      "properties" : {
        "handlerClassname" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "customdatatypehandlers"
      }
    },
    "UserCreate" : {
      "type" : "object",
      "required" : [ "username", "password", "person" ],
      "properties" : {
        "userProperties" : {
          "type" : "string"
        },
        "secretQuestion" : {
          "type" : "string"
        },
        "person" : {
          "type" : "string"
        },
        "username" : {
          "type" : "string"
        },
        "proficientLocales" : {
          "type" : "string"
        },
        "roles" : {
          "type" : "string"
        },
        "systemId" : {
          "type" : "string"
        },
        "password" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "user"
      }
    },
    "ProgramattributetypeUpdate" : {
      "type" : "object",
      "required" : [ "name", "datatypeClassname" ],
      "properties" : {
        "datatypeConfig" : {
          "type" : "string"
        },
        "datatypeClassname" : {
          "type" : "string"
        },
        "handlerConfig" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "maxOccurs" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "preferredHandlerClassname" : {
          "type" : "string"
        },
        "minOccurs" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "programattributetype"
      }
    },
    "PatientprofileUpdate" : {
      "type" : "object",
      
      "properties" : {
        "patient" : {
          "type" : "string"
        },
        "image" : {
          "type" : "string"
        },
        "relationships" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "patientprofile"
      }
    },
    "PersonimageCreate" : {
      "type" : "object",
      
      "properties" : {
        "person" : {
          "type" : "string"
        },
        "base64EncodedImage" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "personimage"
      }
    },
    "LocationtagCreate" : {
      "type" : "object",
      "required" : [ "name" ],
      "properties" : {
        "retireReason" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "retired" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "locationtag"
      }
    },
    "SystemsettingCreate" : {
      "type" : "object",
      "required" : [ "property" ],
      "properties" : {
        "datatypeConfig" : {
          "type" : "string"
        },
        "datatypeClassname" : {
          "type" : "string"
        },
        "handlerConfig" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        },
        "property" : {
          "type" : "string"
        },
        "preferredHandlerClassname" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "systemsetting"
      }
    },
    "FieldCreate" : {
      "type" : "object",
      "required" : [ "name", "fieldType", "selectMultiple" ],
      "properties" : {
        "attributeName" : {
          "type" : "string"
        },
        "concept" : {
          "type" : "string"
        },
        "selectMultiple" : {
          "type" : "string"
        },
        "tableName" : {
          "type" : "string"
        },
        "fieldType" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "defaultValue" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "field"
      }
    },
    "FormUpdate" : {
      "type" : "object",
      "required" : [ "name", "version" ],
      "properties" : {
        "template" : {
          "type" : "string"
        },
        "xslt" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "published" : {
          "type" : "string"
        },
        "build" : {
          "type" : "string"
        },
        "encounterType" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "form"
      }
    },
    "ConceptclassGet" : {
      "type" : "object",
      
      "properties" : {
        "description" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "retired" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string"
        },
        "auditInfo" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "conceptclass"
      }
    },
    "AllergyGet" : {
      "type" : "object",
      
      "properties" : {
        "reaction" : {
          "type" : "string"
        },
        "startDate" : {
          "type" : "string"
        },
        "allergen" : {
          "type" : "string"
        },
        "person" : {
          "type" : "string"
        },
        "startObs" : {
          "type" : "string"
        },
        "stopObs" : {
          "type" : "string"
        },
        "allergyType" : {
          "type" : "string"
        },
        "severity" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "endDate" : {
          "type" : "string"
        },
        "voided" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string"
        },
        "activeListType" : {
          "type" : "string"
        },
        "comments" : {
          "type" : "string"
        },
        "auditInfo" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "allergy"
      }
    },
    "FormGet" : {
      "type" : "object",
      
      "properties" : {
        "formFields" : {
          "type" : "string"
        },
        "resources" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "retired" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string"
        },
        "published" : {
          "type" : "string"
        },
        "build" : {
          "type" : "string"
        },
        "auditInfo" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        },
        "encounterType" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "form"
      }
    },
    "ConceptmaptypeUpdate" : {
      "type" : "object",
      "required" : [ "name" ],
      "properties" : {
        "isHidden" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "conceptmaptype"
      }
    },
    "BahmniprogramenrollmentGet" : {
      "type" : "object",
      
      "properties" : {
        "patient" : {
          "type" : "string"
        },
        "location" : {
          "type" : "string"
        },
        "voided" : {
          "type" : "string"
        },
        "program" : {
          "type" : "string"
        },
        "states" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "attributes" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string"
        },
        "dateEnrolled" : {
          "type" : "string"
        },
        "outcome" : {
          "type" : "string"
        },
        "auditInfo" : {
          "type" : "string"
        },
        "dateCompleted" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "bahmniprogramenrollment"
      }
    },
    "ProgramUpdate" : {
      "type" : "object",
      "required" : [ "name", "description", "concept" ],
      "properties" : {
        "outcomesConcept" : {
          "type" : "string"
        },
        "concept" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "retired" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "program"
      }
    },
    "BahmniordersetUpdate" : {
      "type" : "object",
      "required" : [ "name" ],
      "properties" : {
        "orderSetMembers" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "operator" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "bahmniorderset"
      }
    },
    "ProgramenrollmentGet" : {
      "type" : "object",
      
      "properties" : {
        "patient" : {
          "type" : "string"
        },
        "location" : {
          "type" : "string"
        },
        "voided" : {
          "type" : "string"
        },
        "program" : {
          "type" : "string"
        },
        "states" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string"
        },
        "dateEnrolled" : {
          "type" : "string"
        },
        "outcome" : {
          "type" : "string"
        },
        "auditInfo" : {
          "type" : "string"
        },
        "dateCompleted" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "programenrollment"
      }
    },
    "OrdertypeCreate" : {
      "type" : "object",
      "required" : [ "name", "javaClassName" ],
      "properties" : {
        "conceptClasses" : {
          "type" : "string"
        },
        "javaClassName" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "parent" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "ordertype"
      }
    },
    "ConceptMappingGet" : {
      "type" : "object",
      
      "properties" : {
        "conceptMapType" : {
          "type" : "string"
        },
        "conceptReferenceTerm" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string"
        },
        "auditInfo" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "conceptmapping"
      }
    },
    "DrugUpdate" : {
      "type" : "object",
      "required" : [ "name", "combination", "concept" ],
      "properties" : {
        "concept" : {
          "type" : "string"
        },
        "maximumDailyDose" : {
          "type" : "string"
        },
        "strength" : {
          "type" : "string"
        },
        "route" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "combination" : {
          "type" : "string"
        },
        "doseStrength" : {
          "type" : "string"
        },
        "dosageForm" : {
          "type" : "string"
        },
        "units" : {
          "type" : "string"
        },
        "minimumDailyDose" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "drug"
      }
    },
    "CustomdatatypeGet" : {
      "type" : "object",
      
      "properties" : {
        "datatypeClassname" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string"
        },
        "handlers" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "customdatatype"
      }
    },
    "ConceptMappingCreate" : {
      "type" : "object",
      "required" : [ "conceptReferenceTerm", "conceptMapType" ],
      "properties" : {
        "conceptMapType" : {
          "type" : "string"
        },
        "conceptReferenceTerm" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "conceptmapping"
      }
    },
    "PersonimageUpdate" : {
      "type" : "object",
      
      "properties" : {
        "person" : {
          "type" : "string"
        },
        "base64EncodedImage" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "personimage"
      }
    },
    "VisittypeCreate" : {
      "type" : "object",
      "required" : [ "name" ],
      "properties" : {
        "description" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "visittype"
      }
    },
    "PersonAddressCreate" : {
      "type" : "object",
      
      "properties" : {
        "startDate" : {
          "type" : "string"
        },
        "countyDistrict" : {
          "type" : "string"
        },
        "address1" : {
          "type" : "string"
        },
        "endDate" : {
          "type" : "string"
        },
        "address2" : {
          "type" : "string"
        },
        "address3" : {
          "type" : "string"
        },
        "preferred" : {
          "type" : "string"
        },
        "country" : {
          "type" : "string"
        },
        "address6" : {
          "type" : "string"
        },
        "address5" : {
          "type" : "string"
        },
        "postalCode" : {
          "type" : "string"
        },
        "address4" : {
          "type" : "string"
        },
        "cityVillage" : {
          "type" : "string"
        },
        "stateProvince" : {
          "type" : "string"
        },
        "longitude" : {
          "type" : "string"
        },
        "latitude" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "personaddress"
      }
    },
    "ConceptstopwordUpdate" : {
      "type" : "object",
      "required" : [ "value" ],
      "properties" : {
        "locale" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "conceptstopword"
      }
    },
    "FieldtypeGet" : {
      "type" : "object",
      
      "properties" : {
        "isSet" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "retired" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string"
        },
        "auditInfo" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "fieldtype"
      }
    },
    "EncounterroleCreate" : {
      "type" : "object",
      "required" : [ "name", "description" ],
      "properties" : {
        "description" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "encounterrole"
      }
    },
    "ProgramenrollmentStateUpdate" : {
      "type" : "object",
      "required" : [ "state" ],
      "properties" : {
        "startDate" : {
          "type" : "string"
        },
        "voided" : {
          "type" : "string"
        },
        "state" : {
          "type" : "string"
        },
        "endDate" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "programenrollmentstate"
      }
    },
    "PatientIdentifierUpdate" : {
      "type" : "object",
      "required" : [ "identifier", "identifierType" ],
      "properties" : {
        "location" : {
          "type" : "string"
        },
        "preferred" : {
          "type" : "string"
        },
        "identifierType" : {
          "type" : "string"
        },
        "identifier" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "patientidentifier"
      }
    },
    "ConceptreferencetermGet" : {
      "type" : "object",
      
      "properties" : {
        "conceptSource" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "retired" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "code" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string"
        },
        "auditInfo" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "conceptreferenceterm"
      }
    },
    "BedsGet" : {
      "type" : "object",
      
      "properties" : {
        "bedNumber" : {
          "type" : "string"
        },
        "patients" : {
          "type" : "string"
        },
        "bedId" : {
          "type" : "string"
        },
        "bedType" : {
          "type" : "string"
        },
        "physicalLocation" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "beds"
      }
    },
    "VisitCreate" : {
      "type" : "object",
      "required" : [ "patient", "visitType" ],
      "properties" : {
        "patient" : {
          "type" : "string"
        },
        "stopDatetime" : {
          "type" : "string"
        },
        "location" : {
          "type" : "string"
        },
        "indication" : {
          "type" : "string"
        },
        "attributes" : {
          "type" : "string"
        },
        "encounters" : {
          "type" : "string"
        },
        "startDatetime" : {
          "type" : "string"
        },
        "visitType" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "visit"
      }
    },
    "SpecimenUpdate" : {
      "type" : "object",
      
      "properties" : {
        "typeFreeText" : {
          "type" : "string"
        },
        "report" : {
          "type" : "string"
        },
        "existingObs" : {
          "type" : "string"
        },
        "dateCollected" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "identifier" : {
          "type" : "string"
        },
        "sample" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "specimen"
      }
    },
    "FieldtypeUpdate" : {
      "type" : "object",
      "required" : [ "name" ],
      "properties" : {
        "description" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "fieldtype"
      }
    },
    "LocationAttributeGet" : {
      "type" : "object",
      
      "properties" : {
        "voided" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "attributeType" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string"
        },
        "auditInfo" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "locationattribute"
      }
    },
    "PersonUpdate" : {
      "type" : "object",
      "required" : [ "names", "causeOfDeath", "dead" ],
      "properties" : {
        "birthdateEstimated" : {
          "type" : "string"
        },
        "preferredName" : {
          "type" : "string"
        },
        "deathdateEstimated" : {
          "type" : "string"
        },
        "preferredAddress" : {
          "type" : "string"
        },
        "deathDate" : {
          "type" : "string"
        },
        "names" : {
          "type" : "string"
        },
        "age" : {
          "type" : "string"
        },
        "birthdate" : {
          "type" : "string"
        },
        "gender" : {
          "type" : "string"
        },
        "causeOfDeath" : {
          "type" : "string"
        },
        "attributes" : {
          "type" : "string"
        },
        "addresses" : {
          "type" : "string"
        },
        "dead" : {
          "type" : "string"
        },
        "birthtime" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "person"
      }
    },
    "LocationattributetypeUpdate" : {
      "type" : "object",
      "required" : [ "name", "datatypeClassname" ],
      "properties" : {
        "datatypeConfig" : {
          "type" : "string"
        },
        "datatypeClassname" : {
          "type" : "string"
        },
        "handlerConfig" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "maxOccurs" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "preferredHandlerClassname" : {
          "type" : "string"
        },
        "minOccurs" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "locationattributetype"
      }
    },
    "Hl7Create" : {
      "type" : "object",
      "required" : [ "hl7" ],
      "properties" : {
        "hl7" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "hl7"
      }
    },
    "ConceptmaptypeGet" : {
      "type" : "object",
      
      "properties" : {
        "isHidden" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "retired" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string"
        },
        "auditInfo" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "conceptmaptype"
      }
    },
    "ConceptNameCreate" : {
      "type" : "object",
      "required" : [ "name", "locale" ],
      "properties" : {
        "conceptNameType" : {
          "type" : "string"
        },
        "locale" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "localePreferred" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "conceptname"
      }
    },
    "Hl7sourceUpdate" : {
      "type" : "object",
      "required" : [ "name", "description" ],
      "properties" : {
        "description" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "hl7source"
      }
    },
    "PersonAttributeGet" : {
      "type" : "object",
      
      "properties" : {
        "hydratedObject" : {
          "type" : "string"
        },
        "voided" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        },
        "attributeType" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string"
        },
        "auditInfo" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "personattribute"
      }
    },
    "EncountertypeUpdate" : {
      "type" : "object",
      "required" : [ "name", "description" ],
      "properties" : {
        "description" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "encountertype"
      }
    },
    "CohortMemberGet" : {
      "type" : "object",
      
      "properties" : {
        "patient" : {
          "type" : "string"
        },
        "display" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "cohortmember"
      }
    },
    "WorkflowStateGet" : {
      "type" : "object",
      
      "properties" : {
        "concept" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "retired" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "workflowstate"
      }
    },
    "UserUpdate" : {
      "type" : "object",
      "required" : [ "username", "password", "person" ],
      "properties" : {
        "userProperties" : {
          "type" : "string"
        },
        "secretQuestion" : {
          "type" : "string"
        },
        "person" : {
          "type" : "string"
        },
        "username" : {
          "type" : "string"
        },
        "proficientLocales" : {
          "type" : "string"
        },
        "roles" : {
          "type" : "string"
        },
        "systemId" : {
          "type" : "string"
        },
        "password" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "user"
      }
    },
    "PersonNameUpdate" : {
      "type" : "object",
      "required" : [ "givenName", "familyName" ],
      "properties" : {
        "middleName" : {
          "type" : "string"
        },
        "familyName2" : {
          "type" : "string"
        },
        "degree" : {
          "type" : "string"
        },
        "familyNameSuffix" : {
          "type" : "string"
        },
        "prefix" : {
          "type" : "string"
        },
        "familyName" : {
          "type" : "string"
        },
        "givenName" : {
          "type" : "string"
        },
        "preferred" : {
          "type" : "string"
        },
        "familyNamePrefix" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "personname"
      }
    },
    "VisitUpdate" : {
      "type" : "object",
      "required" : [ "visitType" ],
      "properties" : {
        "stopDatetime" : {
          "type" : "string"
        },
        "location" : {
          "type" : "string"
        },
        "indication" : {
          "type" : "string"
        },
        "attributes" : {
          "type" : "string"
        },
        "encounters" : {
          "type" : "string"
        },
        "startDatetime" : {
          "type" : "string"
        },
        "visitType" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "visit"
      }
    },
    "OrderfrequencyUpdate" : {
      "type" : "object",
      "required" : [ "name" ],
      "properties" : {
        "description" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "orderfrequency"
      }
    },
    "FieldAnswerCreate" : {
      "type" : "object",
      "required" : [ "field", "concept" ],
      "properties" : {
        "field" : {
          "type" : "string"
        },
        "concept" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "fieldanswer"
      }
    },
    "FormFormfieldCreate" : {
      "type" : "object",
      "required" : [ "form", "field", "required" ],
      "properties" : {
        "field" : {
          "type" : "string"
        },
        "fieldNumber" : {
          "type" : "string"
        },
        "form" : {
          "type" : "string"
        },
        "maxOccurs" : {
          "type" : "string"
        },
        "sortWeight" : {
          "type" : "string"
        },
        "pageNumber" : {
          "type" : "string"
        },
        "parent" : {
          "type" : "string"
        },
        "fieldPart" : {
          "type" : "string"
        },
        "required" : {
          "type" : "string"
        },
        "minOccurs" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "formformfield"
      }
    },
    "PatientIdentifierCreate" : {
      "type" : "object",
      "required" : [ "identifier", "identifierType" ],
      "properties" : {
        "location" : {
          "type" : "string"
        },
        "preferred" : {
          "type" : "string"
        },
        "identifierType" : {
          "type" : "string"
        },
        "identifier" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "patientidentifier"
      }
    },
    "BahmniordersetBahmniordersetmemberCreate" : {
      "type" : "object",
      
      "properties" : {
        "concept" : {
          "type" : "string"
        },
        "orderType" : {
          "type" : "string"
        },
        "retired" : {
          "type" : "string"
        },
        "orderTemplate" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "bahmniordersetbahmniordersetmember"
      }
    },
    "RoleCreate" : {
      "type" : "object",
      "required" : [ "name" ],
      "properties" : {
        "description" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "privileges" : {
          "type" : "string"
        },
        "inheritedRoles" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "role"
      }
    },
    "ProblemCreate" : {
      "type" : "object",
      "required" : [ "person", "startDate", "problem" ],
      "properties" : {
        "modifier" : {
          "type" : "string"
        },
        "startDate" : {
          "type" : "string"
        },
        "person" : {
          "type" : "string"
        },
        "stopObs" : {
          "type" : "string"
        },
        "startObs" : {
          "type" : "string"
        },
        "sortWeight" : {
          "type" : "string"
        },
        "problem" : {
          "type" : "string"
        },
        "comments" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "problem"
      }
    },
    "VisitAttributeCreate" : {
      "type" : "object",
      "required" : [ "attributeType", "value" ],
      "properties" : {
        "value" : {
          "type" : "string"
        },
        "attributeType" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "visitattribute"
      }
    },
    "RelationshipCreate" : {
      "type" : "object",
      "required" : [ "personA", "relationshipType", "personB" ],
      "properties" : {
        "startDate" : {
          "type" : "string"
        },
        "relationshipType" : {
          "type" : "string"
        },
        "endDate" : {
          "type" : "string"
        },
        "personA" : {
          "type" : "string"
        },
        "personB" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "relationship"
      }
    },
    "LocationUpdate" : {
      "type" : "object",
      "required" : [ "name" ],
      "properties" : {
        "tags" : {
          "type" : "string"
        },
        "countyDistrict" : {
          "type" : "string"
        },
        "address1" : {
          "type" : "string"
        },
        "address2" : {
          "type" : "string"
        },
        "parentLocation" : {
          "type" : "string"
        },
        "address3" : {
          "type" : "string"
        },
        "country" : {
          "type" : "string"
        },
        "address6" : {
          "type" : "string"
        },
        "address5" : {
          "type" : "string"
        },
        "address4" : {
          "type" : "string"
        },
        "postalCode" : {
          "type" : "string"
        },
        "childLocations" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "cityVillage" : {
          "type" : "string"
        },
        "stateProvince" : {
          "type" : "string"
        },
        "longitude" : {
          "type" : "string"
        },
        "attributes" : {
          "type" : "string"
        },
        "latitude" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "location"
      }
    },
    "PersonAttributeUpdate" : {
      "type" : "object",
      "required" : [ "attributeType" ],
      "properties" : {
        "hydratedObject" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        },
        "attributeType" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "personattribute"
      }
    }
  }
}